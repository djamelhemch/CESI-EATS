{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.string.link.js\";\n\n/**\n * vue-meta v2.4.0\n * (c) 2020\n * - Declan de Wet\n * - SÃ©bastien Chopin (@Atinux)\n * - Pim (@pimlie)\n * - All the amazing contributors\n * @license MIT\n */\nimport deepmerge from 'deepmerge';\nvar version = \"2.4.0\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n/**\n * checks if passed argument is an array\n * @param  {any}  arg - the object to check\n * @return {Boolean} - true if `arg` is an array\n */\n\n\nfunction isArray(arg) {\n  return Array.isArray(arg);\n}\n\nfunction isUndefined(arg) {\n  return typeof arg === 'undefined';\n}\n\nfunction isObject(arg) {\n  return _typeof(arg) === 'object';\n}\n\nfunction isPureObject(arg) {\n  return _typeof(arg) === 'object' && arg !== null;\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction hasGlobalWindowFn() {\n  try {\n    return !isUndefined(window);\n  } catch (e) {\n    return false;\n  }\n}\n\nvar hasGlobalWindow = hasGlobalWindowFn();\n\nvar _global = hasGlobalWindow ? window : global;\n\nvar console = _global.console || {};\n\nfunction warn(str) {\n  /* istanbul ignore next */\n  if (!console || !console.warn) {\n    return;\n  }\n\n  console.warn(str);\n}\n\nvar showWarningNotSupported = function showWarningNotSupported() {\n  return warn('This vue app/component has no vue-meta configuration');\n};\n/**\n * These are constant variables used throughout the application.\n */\n// set some sane defaults\n\n\nvar defaultInfo = {\n  title: undefined,\n  titleChunk: '',\n  titleTemplate: '%s',\n  htmlAttrs: {},\n  bodyAttrs: {},\n  headAttrs: {},\n  base: [],\n  link: [],\n  meta: [],\n  style: [],\n  script: [],\n  noscript: [],\n  __dangerouslyDisableSanitizers: [],\n  __dangerouslyDisableSanitizersByTagID: {}\n};\nvar rootConfigKey = '_vueMeta'; // This is the name of the component option that contains all the information that\n// gets converted to the various meta tags & attributes for the page.\n\nvar keyName = 'metaInfo'; // This is the attribute vue-meta arguments on elements to know which it should\n// manage and which it should ignore.\n\nvar attribute = 'data-vue-meta'; // This is the attribute that goes on the `html` tag to inform `vue-meta`\n// that the server has already generated the meta tags for the initial render.\n\nvar ssrAttribute = 'data-vue-meta-server-rendered'; // This is the property that tells vue-meta to overwrite (instead of append)\n// an item in a tag list. For example, if you have two `meta` tag list items\n// that both have `vmid` of \"description\", then vue-meta will overwrite the\n// shallowest one with the deepest one.\n\nvar tagIDKeyName = 'vmid'; // This is the key name for possible meta templates\n\nvar metaTemplateKeyName = 'template'; // This is the key name for the content-holding property\n\nvar contentKeyName = 'content'; // The id used for the ssr app\n\nvar ssrAppId = 'ssr'; // How long meta update\n\nvar debounceWait = 10; // How long meta update\n\nvar waitOnDestroyed = true;\nvar defaultOptions = {\n  keyName: keyName,\n  attribute: attribute,\n  ssrAttribute: ssrAttribute,\n  tagIDKeyName: tagIDKeyName,\n  contentKeyName: contentKeyName,\n  metaTemplateKeyName: metaTemplateKeyName,\n  waitOnDestroyed: waitOnDestroyed,\n  debounceWait: debounceWait,\n  ssrAppId: ssrAppId\n}; // might be a bit ugly, but minimizes the browser bundles a bit\n\nvar defaultInfoKeys = Object.keys(defaultInfo); // The metaInfo property keys which are used to disable escaping\n\nvar disableOptionKeys = [defaultInfoKeys[12], defaultInfoKeys[13]]; // List of metaInfo property keys which are configuration options (and dont generate html)\n\nvar metaInfoOptionKeys = [defaultInfoKeys[1], defaultInfoKeys[2], 'changed'].concat(disableOptionKeys); // List of metaInfo property keys which only generates attributes and no tags\n\nvar metaInfoAttributeKeys = [defaultInfoKeys[3], defaultInfoKeys[4], defaultInfoKeys[5]]; // HTML elements which support the onload event\n\nvar tagsSupportingOnload = ['link', 'style', 'script']; // HTML elements which dont have a head tag (shortened to our needs)\n// see: https://www.w3.org/TR/html52/document-metadata.html\n\nvar tagsWithoutEndTag = ['base', 'meta', 'link']; // HTML elements which can have inner content (shortened to our needs)\n\nvar tagsWithInnerContent = ['noscript', 'script', 'style']; // Attributes which are inserted as childNodes instead of HTMLAttribute\n\nvar tagAttributeAsInnerContent = ['innerHTML', 'cssText', 'json'];\nvar tagProperties = ['once', 'skip', 'template']; // Attributes which should be added with data- prefix\n\nvar commonDataAttributes = ['body', 'pbody']; // from: https://github.com/kangax/html-minifier/blob/gh-pages/src/htmlminifier.js#L202\n\nvar booleanHtmlAttributes = ['allowfullscreen', 'amp', 'amp-boilerplate', 'async', 'autofocus', 'autoplay', 'checked', 'compact', 'controls', 'declare', 'default', 'defaultchecked', 'defaultmuted', 'defaultselected', 'defer', 'disabled', 'enabled', 'formnovalidate', 'hidden', 'indeterminate', 'inert', 'ismap', 'itemscope', 'loop', 'multiple', 'muted', 'nohref', 'noresize', 'noshade', 'novalidate', 'nowrap', 'open', 'pauseonexit', 'readonly', 'required', 'reversed', 'scoped', 'seamless', 'selected', 'sortable', 'truespeed', 'typemustmatch', 'visible'];\nvar batchId = null;\n\nfunction triggerUpdate(_ref, rootVm, hookName) {\n  var debounceWait = _ref.debounceWait; // if an update was triggered during initialization or when an update was triggered by the\n  // metaInfo watcher, set initialized to null\n  // then we keep falsy value but know we need to run a triggerUpdate after initialization\n\n  if (!rootVm[rootConfigKey].initialized && (rootVm[rootConfigKey].initializing || hookName === 'watcher')) {\n    rootVm[rootConfigKey].initialized = null;\n  }\n\n  if (rootVm[rootConfigKey].initialized && !rootVm[rootConfigKey].pausing) {\n    // batch potential DOM updates to prevent extraneous re-rendering\n    // eslint-disable-next-line no-void\n    batchUpdate(function () {\n      return void rootVm.$meta().refresh();\n    }, debounceWait);\n  }\n}\n/**\n * Performs a batched update.\n *\n * @param  {(null|Number)} id - the ID of this update\n * @param  {Function} callback - the update to perform\n * @return {Number} id - a new ID\n */\n\n\nfunction batchUpdate(callback, timeout) {\n  timeout = timeout === undefined ? 10 : timeout;\n\n  if (!timeout) {\n    callback();\n    return;\n  }\n\n  clearTimeout(batchId);\n  batchId = setTimeout(function () {\n    callback();\n  }, timeout);\n  return batchId;\n}\n/*\n * To reduce build size, this file provides simple polyfills without\n * overly excessive type checking and without modifying\n * the global Array.prototype\n * The polyfills are automatically removed in the commonjs build\n * Also, only files in client/ & shared/ should use these functions\n * files in server/ still use normal js function\n */\n\n\nfunction find(array, predicate, thisArg) {\n  if (!Array.prototype.find) {\n    // idx needs to be a Number, for..in returns string\n    for (var idx = 0; idx < array.length; idx++) {\n      if (predicate.call(thisArg, array[idx], idx, array)) {\n        return array[idx];\n      }\n    }\n\n    return;\n  }\n\n  return array.find(predicate, thisArg);\n}\n\nfunction findIndex(array, predicate, thisArg) {\n  if (!Array.prototype.findIndex) {\n    // idx needs to be a Number, for..in returns string\n    for (var idx = 0; idx < array.length; idx++) {\n      if (predicate.call(thisArg, array[idx], idx, array)) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n\n  return array.findIndex(predicate, thisArg);\n}\n\nfunction toArray(arg) {\n  if (!Array.from) {\n    return Array.prototype.slice.call(arg);\n  }\n\n  return Array.from(arg);\n}\n\nfunction includes(array, value) {\n  if (!Array.prototype.includes) {\n    for (var idx in array) {\n      if (array[idx] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return array.includes(value);\n}\n\nvar querySelector = function querySelector(arg, el) {\n  return (el || document).querySelectorAll(arg);\n};\n\nfunction getTag(tags, tag) {\n  if (!tags[tag]) {\n    tags[tag] = document.getElementsByTagName(tag)[0];\n  }\n\n  return tags[tag];\n}\n\nfunction getElementsKey(_ref) {\n  var body = _ref.body,\n      pbody = _ref.pbody;\n  return body ? 'body' : pbody ? 'pbody' : 'head';\n}\n\nfunction queryElements(parentNode, _ref2, attributes) {\n  var appId = _ref2.appId,\n      attribute = _ref2.attribute,\n      type = _ref2.type,\n      tagIDKeyName = _ref2.tagIDKeyName;\n  attributes = attributes || {};\n  var queries = [\"\".concat(type, \"[\").concat(attribute, \"=\\\"\").concat(appId, \"\\\"]\"), \"\".concat(type, \"[data-\").concat(tagIDKeyName, \"]\")].map(function (query) {\n    for (var key in attributes) {\n      var val = attributes[key];\n      var attributeValue = val && val !== true ? \"=\\\"\".concat(val, \"\\\"\") : '';\n      query += \"[data-\".concat(key).concat(attributeValue, \"]\");\n    }\n\n    return query;\n  });\n  return toArray(querySelector(queries.join(', '), parentNode));\n}\n\nfunction removeElementsByAppId(_ref3, appId) {\n  var attribute = _ref3.attribute;\n  toArray(querySelector(\"[\".concat(attribute, \"=\\\"\").concat(appId, \"\\\"]\"))).map(function (el) {\n    return el.remove();\n  });\n}\n\nfunction removeAttribute(el, attributeName) {\n  el.removeAttribute(attributeName);\n}\n\nfunction hasMetaInfo(vm) {\n  vm = vm || this;\n  return vm && (vm[rootConfigKey] === true || isObject(vm[rootConfigKey]));\n} // a component is in a metaInfo branch when itself has meta info or one of its (grand-)children has\n\n\nfunction inMetaInfoBranch(vm) {\n  vm = vm || this;\n  return vm && !isUndefined(vm[rootConfigKey]);\n}\n\nfunction pause(rootVm, refresh) {\n  rootVm[rootConfigKey].pausing = true;\n  return function () {\n    return resume(rootVm, refresh);\n  };\n}\n\nfunction resume(rootVm, refresh) {\n  rootVm[rootConfigKey].pausing = false;\n\n  if (refresh || refresh === undefined) {\n    return rootVm.$meta().refresh();\n  }\n}\n\nfunction addNavGuards(rootVm) {\n  var router = rootVm.$router; // return when nav guards already added or no router exists\n\n  if (rootVm[rootConfigKey].navGuards || !router) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  rootVm[rootConfigKey].navGuards = true;\n  router.beforeEach(function (to, from, next) {\n    pause(rootVm);\n    next();\n  });\n  router.afterEach(function () {\n    rootVm.$nextTick(function () {\n      var _resume = resume(rootVm),\n          metaInfo = _resume.metaInfo;\n\n      if (metaInfo && isFunction(metaInfo.afterNavigation)) {\n        metaInfo.afterNavigation(metaInfo);\n      }\n    });\n  });\n}\n\nvar appId = 1;\n\nfunction createMixin(Vue, options) {\n  // for which Vue lifecycle hooks should the metaInfo be refreshed\n  var updateOnLifecycleHook = ['activated', 'deactivated', 'beforeMount'];\n  var wasServerRendered = false; // watch for client side component updates\n\n  return {\n    beforeCreate: function beforeCreate() {\n      var _this2 = this;\n\n      var rootKey = '$root';\n      var $root = this[rootKey];\n      var $options = this.$options;\n      var devtoolsEnabled = Vue.config.devtools;\n      Object.defineProperty(this, '_hasMetaInfo', {\n        configurable: true,\n        get: function get() {\n          // Show deprecation warning once when devtools enabled\n          if (devtoolsEnabled && !$root[rootConfigKey].deprecationWarningShown) {\n            warn('VueMeta DeprecationWarning: _hasMetaInfo has been deprecated and will be removed in a future version. Please use hasMetaInfo(vm) instead');\n            $root[rootConfigKey].deprecationWarningShown = true;\n          }\n\n          return hasMetaInfo(this);\n        }\n      });\n\n      if (this === $root) {\n        $root.$once('hook:beforeMount', function () {\n          wasServerRendered = this.$el && this.$el.nodeType === 1 && this.$el.hasAttribute('data-server-rendered'); // In most cases when you have a SSR app it will be the first app thats gonna be\n          // initiated, if we cant detect the data-server-rendered attribute from Vue but we\n          // do see our own ssrAttribute then _assume_ the Vue app with appId 1 is the ssr app\n          // attempted fix for #404 & #562, but we rly need to refactor how we pass appIds from\n          // ssr to the client\n\n          if (!wasServerRendered && $root[rootConfigKey] && $root[rootConfigKey].appId === 1) {\n            var htmlTag = getTag({}, 'html');\n            wasServerRendered = htmlTag && htmlTag.hasAttribute(options.ssrAttribute);\n          }\n        });\n      } // Add a marker to know if it uses metaInfo\n      // _vnode is used to know that it's attached to a real component\n      // useful if we use some mixin to add some meta tags (like nuxt-i18n)\n\n\n      if (isUndefined($options[options.keyName]) || $options[options.keyName] === null) {\n        return;\n      }\n\n      if (!$root[rootConfigKey]) {\n        $root[rootConfigKey] = {\n          appId: appId\n        };\n        appId++;\n\n        if (devtoolsEnabled && $root.$options[options.keyName]) {\n          // use nextTick so the children should be added to $root\n          this.$nextTick(function () {\n            // find the first child that lists fnOptions\n            var child = find($root.$children, function (c) {\n              return c.$vnode && c.$vnode.fnOptions;\n            });\n\n            if (child && child.$vnode.fnOptions[options.keyName]) {\n              warn(\"VueMeta has detected a possible global mixin which adds a \".concat(options.keyName, \" property to all Vue components on the page. This could cause severe performance issues. If possible, use $meta().addApp to add meta information instead\"));\n            }\n          });\n        }\n      } // to speed up updates we keep track of branches which have a component with vue-meta info defined\n      // if _vueMeta = true it has info, if _vueMeta = false a child has info\n\n\n      if (!this[rootConfigKey]) {\n        this[rootConfigKey] = true;\n        var parent = this.$parent;\n\n        while (parent && parent !== $root) {\n          if (isUndefined(parent[rootConfigKey])) {\n            parent[rootConfigKey] = false;\n          }\n\n          parent = parent.$parent;\n        }\n      } // coerce function-style metaInfo to a computed prop so we can observe\n      // it on creation\n\n\n      if (isFunction($options[options.keyName])) {\n        $options.computed = $options.computed || {};\n        $options.computed.$metaInfo = $options[options.keyName];\n\n        if (!this.$isServer) {\n          // if computed $metaInfo exists, watch it for updates & trigger a refresh\n          // when it changes (i.e. automatically handle async actions that affect metaInfo)\n          // credit for this suggestion goes to [SÃ©bastien Chopin](https://github.com/Atinux)\n          this.$on('hook:created', function () {\n            this.$watch('$metaInfo', function () {\n              triggerUpdate(options, this[rootKey], 'watcher');\n            });\n          });\n        }\n      } // force an initial refresh on page load and prevent other lifecycleHooks\n      // to triggerUpdate until this initial refresh is finished\n      // this is to make sure that when a page is opened in an inactive tab which\n      // has throttled rAF/timers we still immediately set the page title\n\n\n      if (isUndefined($root[rootConfigKey].initialized)) {\n        $root[rootConfigKey].initialized = this.$isServer;\n\n        if (!$root[rootConfigKey].initialized) {\n          if (!$root[rootConfigKey].initializedSsr) {\n            $root[rootConfigKey].initializedSsr = true;\n            this.$on('hook:beforeMount', function () {\n              var $root = this[rootKey]; // if this Vue-app was server rendered, set the appId to 'ssr'\n              // only one SSR app per page is supported\n\n              if (wasServerRendered) {\n                $root[rootConfigKey].appId = options.ssrAppId;\n              }\n            });\n          } // we use the mounted hook here as on page load\n\n\n          this.$on('hook:mounted', function () {\n            var $root = this[rootKey];\n\n            if ($root[rootConfigKey].initialized) {\n              return;\n            } // used in triggerUpdate to check if a change was triggered\n            // during initialization\n\n\n            $root[rootConfigKey].initializing = true; // refresh meta in nextTick so all child components have loaded\n\n            this.$nextTick(function () {\n              var _$root$$meta$refresh = $root.$meta().refresh(),\n                  tags = _$root$$meta$refresh.tags,\n                  metaInfo = _$root$$meta$refresh.metaInfo; // After ssr hydration (identifier by tags === false) check\n              // if initialized was set to null in triggerUpdate. That'd mean\n              // that during initilazation changes where triggered which need\n              // to be applied OR a metaInfo watcher was triggered before the\n              // current hook was called\n              // (during initialization all changes are blocked)\n\n\n              if (tags === false && $root[rootConfigKey].initialized === null) {\n                this.$nextTick(function () {\n                  return triggerUpdate(options, $root, 'init');\n                });\n              }\n\n              $root[rootConfigKey].initialized = true;\n              delete $root[rootConfigKey].initializing; // add the navigation guards if they havent been added yet\n              // they are needed for the afterNavigation callback\n\n              if (!options.refreshOnceOnNavigation && metaInfo.afterNavigation) {\n                addNavGuards($root);\n              }\n            });\n          }); // add the navigation guards if requested\n\n          if (options.refreshOnceOnNavigation) {\n            addNavGuards($root);\n          }\n        }\n      }\n\n      this.$on('hook:destroyed', function () {\n        var _this = this; // do not trigger refresh:\n        // - when user configured to not wait for transitions on destroyed\n        // - when the component doesnt have a parent\n        // - doesnt have metaInfo defined\n\n\n        if (!this.$parent || !hasMetaInfo(this)) {\n          return;\n        }\n\n        delete this._hasMetaInfo;\n        this.$nextTick(function () {\n          if (!options.waitOnDestroyed || !_this.$el || !_this.$el.offsetParent) {\n            triggerUpdate(options, _this.$root, 'destroyed');\n            return;\n          } // Wait that element is hidden before refreshing meta tags (to support animations)\n\n\n          var interval = setInterval(function () {\n            if (_this.$el && _this.$el.offsetParent !== null) {\n              /* istanbul ignore next line */\n              return;\n            }\n\n            clearInterval(interval);\n            triggerUpdate(options, _this.$root, 'destroyed');\n          }, 50);\n        });\n      }); // do not trigger refresh on the server side\n\n      if (this.$isServer) {\n        /* istanbul ignore next */\n        return;\n      } // no need to add this hooks on server side\n\n\n      updateOnLifecycleHook.forEach(function (lifecycleHook) {\n        _this2.$on(\"hook:\".concat(lifecycleHook), function () {\n          triggerUpdate(options, this[rootKey], lifecycleHook);\n        });\n      });\n    }\n  };\n}\n\nfunction setOptions(options) {\n  // combine options\n  options = isObject(options) ? options : {}; // The options are set like this so they can\n  // be minified by terser while keeping the\n  // user api intact\n  // terser --mangle-properties keep_quoted=strict\n\n  /* eslint-disable dot-notation */\n\n  return {\n    keyName: options['keyName'] || defaultOptions.keyName,\n    attribute: options['attribute'] || defaultOptions.attribute,\n    ssrAttribute: options['ssrAttribute'] || defaultOptions.ssrAttribute,\n    tagIDKeyName: options['tagIDKeyName'] || defaultOptions.tagIDKeyName,\n    contentKeyName: options['contentKeyName'] || defaultOptions.contentKeyName,\n    metaTemplateKeyName: options['metaTemplateKeyName'] || defaultOptions.metaTemplateKeyName,\n    debounceWait: isUndefined(options['debounceWait']) ? defaultOptions.debounceWait : options['debounceWait'],\n    waitOnDestroyed: isUndefined(options['waitOnDestroyed']) ? defaultOptions.waitOnDestroyed : options['waitOnDestroyed'],\n    ssrAppId: options['ssrAppId'] || defaultOptions.ssrAppId,\n    refreshOnceOnNavigation: !!options['refreshOnceOnNavigation']\n  };\n  /* eslint-enable dot-notation */\n}\n\nfunction getOptions(options) {\n  var optionsCopy = {};\n\n  for (var key in options) {\n    optionsCopy[key] = options[key];\n  }\n\n  return optionsCopy;\n}\n\nfunction ensureIsArray(arg, key) {\n  if (!key || !isObject(arg)) {\n    return isArray(arg) ? arg : [];\n  }\n\n  if (!isArray(arg[key])) {\n    arg[key] = [];\n  }\n\n  return arg;\n}\n\nvar serverSequences = [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;'], [/\"/g, '&quot;'], [/'/g, '&#x27;']];\nvar clientSequences = [[/&/g, \"&\"], [/</g, \"<\"], [/>/g, \">\"], [/\"/g, \"\\\"\"], [/'/g, \"'\"]]; // sanitizes potentially dangerous characters\n\nfunction escape(info, options, escapeOptions, escapeKeys) {\n  var tagIDKeyName = options.tagIDKeyName;\n  var _escapeOptions$doEsca = escapeOptions.doEscape,\n      doEscape = _escapeOptions$doEsca === void 0 ? function (v) {\n    return v;\n  } : _escapeOptions$doEsca;\n  var escaped = {};\n\n  for (var key in info) {\n    var value = info[key]; // no need to escape configuration options\n\n    if (includes(metaInfoOptionKeys, key)) {\n      escaped[key] = value;\n      continue;\n    } // do not use destructuring for disableOptionKeys, it increases transpiled size\n    // due to var checks while we are guaranteed the structure of the cb\n\n\n    var disableKey = disableOptionKeys[0];\n\n    if (escapeOptions[disableKey] && includes(escapeOptions[disableKey], key)) {\n      // this info[key] doesnt need to escaped if the option is listed in __dangerouslyDisableSanitizers\n      escaped[key] = value;\n      continue;\n    }\n\n    var tagId = info[tagIDKeyName];\n\n    if (tagId) {\n      disableKey = disableOptionKeys[1]; // keys which are listed in __dangerouslyDisableSanitizersByTagID for the current vmid do not need to be escaped\n\n      if (escapeOptions[disableKey] && escapeOptions[disableKey][tagId] && includes(escapeOptions[disableKey][tagId], key)) {\n        escaped[key] = value;\n        continue;\n      }\n    }\n\n    if (isString(value)) {\n      escaped[key] = doEscape(value);\n    } else if (isArray(value)) {\n      escaped[key] = value.map(function (v) {\n        if (isPureObject(v)) {\n          return escape(v, options, escapeOptions, true);\n        }\n\n        return doEscape(v);\n      });\n    } else if (isPureObject(value)) {\n      escaped[key] = escape(value, options, escapeOptions, true);\n    } else {\n      escaped[key] = value;\n    }\n\n    if (escapeKeys) {\n      var escapedKey = doEscape(key);\n\n      if (key !== escapedKey) {\n        escaped[escapedKey] = escaped[key];\n        delete escaped[key];\n      }\n    }\n  }\n\n  return escaped;\n}\n\nfunction escapeMetaInfo(options, info, escapeSequences) {\n  escapeSequences = escapeSequences || []; // do not use destructuring for seq, it increases transpiled size\n  // due to var checks while we are guaranteed the structure of the cb\n\n  var escapeOptions = {\n    doEscape: function doEscape(value) {\n      return escapeSequences.reduce(function (val, seq) {\n        return val.replace(seq[0], seq[1]);\n      }, value);\n    }\n  };\n  disableOptionKeys.forEach(function (disableKey, index) {\n    if (index === 0) {\n      ensureIsArray(info, disableKey);\n    } else if (index === 1) {\n      for (var key in info[disableKey]) {\n        ensureIsArray(info[disableKey], key);\n      }\n    }\n\n    escapeOptions[disableKey] = info[disableKey];\n  }); // begin sanitization\n\n  return escape(info, options, escapeOptions);\n}\n\nfunction applyTemplate(_ref, headObject, template, chunk) {\n  var component = _ref.component,\n      metaTemplateKeyName = _ref.metaTemplateKeyName,\n      contentKeyName = _ref.contentKeyName;\n\n  if (template === true || headObject[metaTemplateKeyName] === true) {\n    // abort, template was already applied\n    return false;\n  }\n\n  if (isUndefined(template) && headObject[metaTemplateKeyName]) {\n    template = headObject[metaTemplateKeyName];\n    headObject[metaTemplateKeyName] = true;\n  } // return early if no template defined\n\n\n  if (!template) {\n    // cleanup faulty template properties\n    delete headObject[metaTemplateKeyName];\n    return false;\n  }\n\n  if (isUndefined(chunk)) {\n    chunk = headObject[contentKeyName];\n  }\n\n  headObject[contentKeyName] = isFunction(template) ? template.call(component, chunk) : template.replace(/%s/g, chunk);\n  return true;\n}\n\nfunction _arrayMerge(_ref, target, source) {\n  var component = _ref.component,\n      tagIDKeyName = _ref.tagIDKeyName,\n      metaTemplateKeyName = _ref.metaTemplateKeyName,\n      contentKeyName = _ref.contentKeyName; // we concat the arrays without merging objects contained in,\n  // but we check for a `vmid` property on each object in the array\n  // using an O(1) lookup associative array exploit\n\n  var destination = [];\n\n  if (!target.length && !source.length) {\n    return destination;\n  }\n\n  target.forEach(function (targetItem, targetIndex) {\n    // no tagID so no need to check for duplicity\n    if (!targetItem[tagIDKeyName]) {\n      destination.push(targetItem);\n      return;\n    }\n\n    var sourceIndex = findIndex(source, function (item) {\n      return item[tagIDKeyName] === targetItem[tagIDKeyName];\n    });\n    var sourceItem = source[sourceIndex]; // source doesnt contain any duplicate vmid's, we can keep targetItem\n\n    if (sourceIndex === -1) {\n      destination.push(targetItem);\n      return;\n    } // when sourceItem explictly defines contentKeyName or innerHTML as undefined, its\n    // an indication that we need to skip the default behaviour or child has preference over parent\n    // which means we keep the targetItem and ignore/remove the sourceItem\n\n\n    if (contentKeyName in sourceItem && sourceItem[contentKeyName] === undefined || 'innerHTML' in sourceItem && sourceItem.innerHTML === undefined) {\n      destination.push(targetItem); // remove current index from source array so its not concatenated to destination below\n\n      source.splice(sourceIndex, 1);\n      return;\n    } // we now know that targetItem is a duplicate and we should ignore it in favor of sourceItem\n    // if source specifies null as content then ignore both the target as the source\n\n\n    if (sourceItem[contentKeyName] === null || sourceItem.innerHTML === null) {\n      // remove current index from source array so its not concatenated to destination below\n      source.splice(sourceIndex, 1);\n      return;\n    } // now we only need to check if the target has a template to combine it with the source\n\n\n    var targetTemplate = targetItem[metaTemplateKeyName];\n\n    if (!targetTemplate) {\n      return;\n    }\n\n    var sourceTemplate = sourceItem[metaTemplateKeyName];\n\n    if (!sourceTemplate) {\n      // use parent template and child content\n      applyTemplate({\n        component: component,\n        metaTemplateKeyName: metaTemplateKeyName,\n        contentKeyName: contentKeyName\n      }, sourceItem, targetTemplate); // set template to true to indicate template was already applied\n\n      sourceItem.template = true;\n      return;\n    }\n\n    if (!sourceItem[contentKeyName]) {\n      // use parent content and child template\n      applyTemplate({\n        component: component,\n        metaTemplateKeyName: metaTemplateKeyName,\n        contentKeyName: contentKeyName\n      }, sourceItem, undefined, targetItem[contentKeyName]);\n    }\n  });\n  return destination.concat(source);\n}\n\nvar warningShown = false;\n\nfunction merge(target, source, options) {\n  options = options || {}; // remove properties explicitly set to false so child components can\n  // optionally _not_ overwrite the parents content\n  // (for array properties this is checked in arrayMerge)\n\n  if (source.title === undefined) {\n    delete source.title;\n  }\n\n  metaInfoAttributeKeys.forEach(function (attrKey) {\n    if (!source[attrKey]) {\n      return;\n    }\n\n    for (var key in source[attrKey]) {\n      if (key in source[attrKey] && source[attrKey][key] === undefined) {\n        if (includes(booleanHtmlAttributes, key) && !warningShown) {\n          warn('VueMeta: Please note that since v2 the value undefined is not used to indicate boolean attributes anymore, see migration guide for details');\n          warningShown = true;\n        }\n\n        delete source[attrKey][key];\n      }\n    }\n  });\n  return deepmerge(target, source, {\n    arrayMerge: function arrayMerge(t, s) {\n      return _arrayMerge(options, t, s);\n    }\n  });\n}\n\nfunction getComponentMetaInfo(options, component) {\n  return getComponentOption(options || {}, component, defaultInfo);\n}\n/**\n * Returns the `opts.option` $option value of the given `opts.component`.\n * If methods are encountered, they will be bound to the component context.\n * If `opts.deep` is true, will recursively merge all child component\n * `opts.option` $option values into the returned result.\n *\n * @param  {Object} opts - options\n * @param  {Object} opts.component - Vue component to fetch option data from\n * @param  {Boolean} opts.deep - look for data in child components as well?\n * @param  {Function} opts.arrayMerge - how should arrays be merged?\n * @param  {String} opts.keyName - the name of the option to look for\n * @param  {Object} [result={}] - result so far\n * @return {Object} result - final aggregated result\n */\n\n\nfunction getComponentOption(options, component, result) {\n  result = result || {};\n\n  if (component._inactive) {\n    return result;\n  }\n\n  options = options || {};\n  var _options = options,\n      keyName = _options.keyName;\n  var $metaInfo = component.$metaInfo,\n      $options = component.$options,\n      $children = component.$children; // only collect option data if it exists\n\n  if ($options[keyName]) {\n    // if $metaInfo exists then [keyName] was defined as a function\n    // and set to the computed prop $metaInfo in the mixin\n    // using the computed prop should be a small performance increase\n    // because Vue caches those internally\n    var data = $metaInfo || $options[keyName]; // only merge data with result when its an object\n    // eg it could be a function when metaInfo() returns undefined\n    // dueo to the or statement above\n\n    if (isObject(data)) {\n      result = merge(result, data, options);\n    }\n  } // collect & aggregate child options if deep = true\n\n\n  if ($children.length) {\n    $children.forEach(function (childComponent) {\n      // check if the childComponent is in a branch\n      // return otherwise so we dont walk all component branches unnecessarily\n      if (!inMetaInfoBranch(childComponent)) {\n        return;\n      }\n\n      result = getComponentOption(options, childComponent, result);\n    });\n  }\n\n  return result;\n}\n\nvar callbacks = [];\n\nfunction isDOMComplete(d) {\n  return (d || document).readyState === 'complete';\n}\n\nfunction addCallback(query, callback) {\n  if (arguments.length === 1) {\n    callback = query;\n    query = '';\n  }\n\n  callbacks.push([query, callback]);\n}\n\nfunction addCallbacks(_ref, type, tags, autoAddListeners) {\n  var tagIDKeyName = _ref.tagIDKeyName;\n  var hasAsyncCallback = false;\n  tags.forEach(function (tag) {\n    if (!tag[tagIDKeyName] || !tag.callback) {\n      return;\n    }\n\n    hasAsyncCallback = true;\n    addCallback(\"\".concat(type, \"[data-\").concat(tagIDKeyName, \"=\\\"\").concat(tag[tagIDKeyName], \"\\\"]\"), tag.callback);\n  });\n\n  if (!autoAddListeners || !hasAsyncCallback) {\n    return hasAsyncCallback;\n  }\n\n  return addListeners();\n}\n\nfunction addListeners() {\n  if (isDOMComplete()) {\n    applyCallbacks();\n    return;\n  } // Instead of using a MutationObserver, we just apply\n\n  /* istanbul ignore next */\n\n\n  document.onreadystatechange = function () {\n    applyCallbacks();\n  };\n}\n\nfunction applyCallbacks(matchElement) {\n  callbacks.forEach(function (args) {\n    // do not use destructuring for args, it increases transpiled size\n    // due to var checks while we are guaranteed the structure of the cb\n    var query = args[0];\n    var callback = args[1];\n    var selector = \"\".concat(query, \"[onload=\\\"this.__vm_l=1\\\"]\");\n    var elements = [];\n\n    if (!matchElement) {\n      elements = toArray(querySelector(selector));\n    }\n\n    if (matchElement && matchElement.matches(selector)) {\n      elements = [matchElement];\n    }\n\n    elements.forEach(function (element) {\n      /* __vm_cb: whether the load callback has been called\n       * __vm_l: set by onload attribute, whether the element was loaded\n       * __vm_ev: whether the event listener was added or not\n       */\n      if (element.__vm_cb) {\n        return;\n      }\n\n      var onload = function onload() {\n        /* Mark that the callback for this element has already been called,\n         * this prevents the callback to run twice in some (rare) conditions\n         */\n        element.__vm_cb = true;\n        /* onload needs to be removed because we only need the\n         * attribute after ssr and if we dont remove it the node\n         * will fail isEqualNode on the client\n         */\n\n        removeAttribute(element, 'onload');\n        callback(element);\n      };\n      /* IE9 doesnt seem to load scripts synchronously,\n       * causing a script sometimes/often already to be loaded\n       * when we add the event listener below (thus adding an onload event\n       * listener has no use because it will never be triggered).\n       * Therefore we add the onload attribute during ssr, and\n       * check here if it was already loaded or not\n       */\n\n\n      if (element.__vm_l) {\n        onload();\n        return;\n      }\n\n      if (!element.__vm_ev) {\n        element.__vm_ev = true;\n        element.addEventListener('load', onload);\n      }\n    });\n  });\n} // instead of adding it to the html\n\n\nvar attributeMap = {};\n/**\n * Updates the document's html tag attributes\n *\n * @param  {Object} attrs - the new document html attributes\n * @param  {HTMLElement} tag - the HTMLElement tag to update with new attrs\n */\n\nfunction updateAttribute(appId, options, type, attrs, tag) {\n  var _ref = options || {},\n      attribute = _ref.attribute;\n\n  var vueMetaAttrString = tag.getAttribute(attribute);\n\n  if (vueMetaAttrString) {\n    attributeMap[type] = JSON.parse(decodeURI(vueMetaAttrString));\n    removeAttribute(tag, attribute);\n  }\n\n  var data = attributeMap[type] || {};\n  var toUpdate = []; // remove attributes from the map\n  // which have been removed for this appId\n\n  for (var attr in data) {\n    if (data[attr] !== undefined && appId in data[attr]) {\n      toUpdate.push(attr);\n\n      if (!attrs[attr]) {\n        delete data[attr][appId];\n      }\n    }\n  }\n\n  for (var _attr in attrs) {\n    var attrData = data[_attr];\n\n    if (!attrData || attrData[appId] !== attrs[_attr]) {\n      toUpdate.push(_attr);\n\n      if (attrs[_attr] !== undefined) {\n        data[_attr] = data[_attr] || {};\n        data[_attr][appId] = attrs[_attr];\n      }\n    }\n  }\n\n  for (var _i = 0, _toUpdate = toUpdate; _i < _toUpdate.length; _i++) {\n    var _attr2 = _toUpdate[_i];\n    var _attrData = data[_attr2];\n    var attrValues = [];\n\n    for (var _appId in _attrData) {\n      Array.prototype.push.apply(attrValues, [].concat(_attrData[_appId]));\n    }\n\n    if (attrValues.length) {\n      var attrValue = includes(booleanHtmlAttributes, _attr2) && attrValues.some(Boolean) ? '' : attrValues.filter(function (v) {\n        return v !== undefined;\n      }).join(' ');\n      tag.setAttribute(_attr2, attrValue);\n    } else {\n      removeAttribute(tag, _attr2);\n    }\n  }\n\n  attributeMap[type] = data;\n}\n/**\n * Updates the document title\n *\n * @param  {String} title - the new title of the document\n */\n\n\nfunction updateTitle(title) {\n  if (!title && title !== '') {\n    return;\n  }\n\n  document.title = title;\n}\n/**\n * Updates meta tags inside <head> and <body> on the client. Borrowed from `react-helmet`:\n * https://github.com/nfl/react-helmet/blob/004d448f8de5f823d10f838b02317521180f34da/src/Helmet.js#L195-L245\n *\n * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} type - the name of the tag\n * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base\n * @return {Object} - a representation of what tags changed\n */\n\n\nfunction updateTag(appId, options, type, tags, head, body) {\n  var _ref = options || {},\n      attribute = _ref.attribute,\n      tagIDKeyName = _ref.tagIDKeyName;\n\n  var dataAttributes = commonDataAttributes.slice();\n  dataAttributes.push(tagIDKeyName);\n  var newElements = [];\n  var queryOptions = {\n    appId: appId,\n    attribute: attribute,\n    type: type,\n    tagIDKeyName: tagIDKeyName\n  };\n  var currentElements = {\n    head: queryElements(head, queryOptions),\n    pbody: queryElements(body, queryOptions, {\n      pbody: true\n    }),\n    body: queryElements(body, queryOptions, {\n      body: true\n    })\n  };\n\n  if (tags.length > 1) {\n    // remove duplicates that could have been found by merging tags\n    // which include a mixin with metaInfo and that mixin is used\n    // by multiple components on the same page\n    var found = [];\n    tags = tags.filter(function (x) {\n      var k = JSON.stringify(x);\n      var res = !includes(found, k);\n      found.push(k);\n      return res;\n    });\n  }\n\n  tags.forEach(function (tag) {\n    if (tag.skip) {\n      return;\n    }\n\n    var newElement = document.createElement(type);\n\n    if (!tag.once) {\n      newElement.setAttribute(attribute, appId);\n    }\n\n    Object.keys(tag).forEach(function (attr) {\n      /* istanbul ignore next */\n      if (includes(tagProperties, attr)) {\n        return;\n      }\n\n      if (attr === 'innerHTML') {\n        newElement.innerHTML = tag.innerHTML;\n        return;\n      }\n\n      if (attr === 'json') {\n        newElement.innerHTML = JSON.stringify(tag.json);\n        return;\n      }\n\n      if (attr === 'cssText') {\n        if (newElement.styleSheet) {\n          /* istanbul ignore next */\n          newElement.styleSheet.cssText = tag.cssText;\n        } else {\n          newElement.appendChild(document.createTextNode(tag.cssText));\n        }\n\n        return;\n      }\n\n      if (attr === 'callback') {\n        newElement.onload = function () {\n          return tag[attr](newElement);\n        };\n\n        return;\n      }\n\n      var _attr = includes(dataAttributes, attr) ? \"data-\".concat(attr) : attr;\n\n      var isBooleanAttribute = includes(booleanHtmlAttributes, attr);\n\n      if (isBooleanAttribute && !tag[attr]) {\n        return;\n      }\n\n      var value = isBooleanAttribute ? '' : tag[attr];\n      newElement.setAttribute(_attr, value);\n    });\n    var oldElements = currentElements[getElementsKey(tag)]; // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n\n    var indexToDelete;\n    var hasEqualElement = oldElements.some(function (existingTag, index) {\n      indexToDelete = index;\n      return newElement.isEqualNode(existingTag);\n    });\n\n    if (hasEqualElement && (indexToDelete || indexToDelete === 0)) {\n      oldElements.splice(indexToDelete, 1);\n    } else {\n      newElements.push(newElement);\n    }\n  });\n  var oldElements = [];\n\n  for (var _type in currentElements) {\n    Array.prototype.push.apply(oldElements, currentElements[_type]);\n  } // remove old elements\n\n\n  oldElements.forEach(function (element) {\n    element.parentNode.removeChild(element);\n  }); // insert new elements\n\n  newElements.forEach(function (element) {\n    if (element.hasAttribute('data-body')) {\n      body.appendChild(element);\n      return;\n    }\n\n    if (element.hasAttribute('data-pbody')) {\n      body.insertBefore(element, body.firstChild);\n      return;\n    }\n\n    head.appendChild(element);\n  });\n  return {\n    oldTags: oldElements,\n    newTags: newElements\n  };\n}\n/**\n * Performs client-side updates when new meta info is received\n *\n * @param  {Object} newInfo - the meta info to update to\n */\n\n\nfunction updateClientMetaInfo(appId, options, newInfo) {\n  options = options || {};\n  var _options = options,\n      ssrAttribute = _options.ssrAttribute,\n      ssrAppId = _options.ssrAppId; // only cache tags for current update\n\n  var tags = {};\n  var htmlTag = getTag(tags, 'html'); // if this is a server render, then dont update\n\n  if (appId === ssrAppId && htmlTag.hasAttribute(ssrAttribute)) {\n    // remove the server render attribute so we can update on (next) changes\n    removeAttribute(htmlTag, ssrAttribute); // add load callbacks if the\n\n    var addLoadListeners = false;\n    tagsSupportingOnload.forEach(function (type) {\n      if (newInfo[type] && addCallbacks(options, type, newInfo[type])) {\n        addLoadListeners = true;\n      }\n    });\n\n    if (addLoadListeners) {\n      addListeners();\n    }\n\n    return false;\n  } // initialize tracked changes\n\n\n  var tagsAdded = {};\n  var tagsRemoved = {};\n\n  for (var type in newInfo) {\n    // ignore these\n    if (includes(metaInfoOptionKeys, type)) {\n      continue;\n    }\n\n    if (type === 'title') {\n      // update the title\n      updateTitle(newInfo.title);\n      continue;\n    }\n\n    if (includes(metaInfoAttributeKeys, type)) {\n      var tagName = type.substr(0, 4);\n      updateAttribute(appId, options, type, newInfo[type], getTag(tags, tagName));\n      continue;\n    } // tags should always be an array, ignore if it isnt\n\n\n    if (!isArray(newInfo[type])) {\n      continue;\n    }\n\n    var _updateTag = updateTag(appId, options, type, newInfo[type], getTag(tags, 'head'), getTag(tags, 'body')),\n        oldTags = _updateTag.oldTags,\n        newTags = _updateTag.newTags;\n\n    if (newTags.length) {\n      tagsAdded[type] = newTags;\n      tagsRemoved[type] = oldTags;\n    }\n  }\n\n  return {\n    tagsAdded: tagsAdded,\n    tagsRemoved: tagsRemoved\n  };\n}\n\nvar appsMetaInfo;\n\nfunction addApp(rootVm, appId, options) {\n  return {\n    set: function set(metaInfo) {\n      return setMetaInfo(rootVm, appId, options, metaInfo);\n    },\n    remove: function remove() {\n      return removeMetaInfo(rootVm, appId, options);\n    }\n  };\n}\n\nfunction setMetaInfo(rootVm, appId, options, metaInfo) {\n  // if a vm exists _and_ its mounted then immediately update\n  if (rootVm && rootVm.$el) {\n    return updateClientMetaInfo(appId, options, metaInfo);\n  } // store for later, the info\n  // will be set on the first refresh\n\n\n  appsMetaInfo = appsMetaInfo || {};\n  appsMetaInfo[appId] = metaInfo;\n}\n\nfunction removeMetaInfo(rootVm, appId, options) {\n  if (rootVm && rootVm.$el) {\n    var tags = {};\n\n    var _iterator = _createForOfIteratorHelper(metaInfoAttributeKeys),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var type = _step.value;\n        var tagName = type.substr(0, 4);\n        updateAttribute(appId, options, type, {}, getTag(tags, tagName));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return removeElementsByAppId(options, appId);\n  }\n\n  if (appsMetaInfo[appId]) {\n    delete appsMetaInfo[appId];\n    clearAppsMetaInfo();\n  }\n}\n\nfunction getAppsMetaInfo() {\n  return appsMetaInfo;\n}\n\nfunction clearAppsMetaInfo(force) {\n  if (force || !Object.keys(appsMetaInfo).length) {\n    appsMetaInfo = undefined;\n  }\n}\n/**\n * Returns the correct meta info for the given component\n * (child components will overwrite parent meta info)\n *\n * @param  {Object} component - the Vue instance to get meta info from\n * @return {Object} - returned meta info\n */\n\n\nfunction getMetaInfo(options, info, escapeSequences, component) {\n  options = options || {};\n  escapeSequences = escapeSequences || [];\n  var _options = options,\n      tagIDKeyName = _options.tagIDKeyName; // Remove all \"template\" tags from meta\n  // backup the title chunk in case user wants access to it\n\n  if (info.title) {\n    info.titleChunk = info.title;\n  } // replace title with populated template\n\n\n  if (info.titleTemplate && info.titleTemplate !== '%s') {\n    applyTemplate({\n      component: component,\n      contentKeyName: 'title'\n    }, info, info.titleTemplate, info.titleChunk || '');\n  } // convert base tag to an array so it can be handled the same way\n  // as the other tags\n\n\n  if (info.base) {\n    info.base = Object.keys(info.base).length ? [info.base] : [];\n  }\n\n  if (info.meta) {\n    // remove meta items with duplicate vmid's\n    info.meta = info.meta.filter(function (metaItem, index, arr) {\n      var hasVmid = !!metaItem[tagIDKeyName];\n\n      if (!hasVmid) {\n        return true;\n      }\n\n      var isFirstItemForVmid = index === findIndex(arr, function (item) {\n        return item[tagIDKeyName] === metaItem[tagIDKeyName];\n      });\n      return isFirstItemForVmid;\n    }); // apply templates if needed\n\n    info.meta.forEach(function (metaObject) {\n      return applyTemplate(options, metaObject);\n    });\n  }\n\n  return escapeMetaInfo(options, info, escapeSequences);\n}\n/**\n * When called, will update the current meta info with new meta info.\n * Useful when updating meta info as the result of an asynchronous\n * action that resolves after the initial render takes place.\n *\n * Credit to [SÃ©bastien Chopin](https://github.com/Atinux) for the suggestion\n * to implement this method.\n *\n * @return {Object} - new meta info\n */\n\n\nfunction refresh(rootVm, options) {\n  options = options || {}; // make sure vue-meta was initiated\n\n  if (!rootVm[rootConfigKey]) {\n    showWarningNotSupported();\n    return {};\n  } // collect & aggregate all metaInfo $options\n\n\n  var rawInfo = getComponentMetaInfo(options, rootVm);\n  var metaInfo = getMetaInfo(options, rawInfo, clientSequences, rootVm);\n  var appId = rootVm[rootConfigKey].appId;\n  var tags = updateClientMetaInfo(appId, options, metaInfo); // emit \"event\" with new info\n\n  if (tags && isFunction(metaInfo.changed)) {\n    metaInfo.changed(metaInfo, tags.tagsAdded, tags.tagsRemoved);\n    tags = {\n      addedTags: tags.tagsAdded,\n      removedTags: tags.tagsRemoved\n    };\n  }\n\n  var appsMetaInfo = getAppsMetaInfo();\n\n  if (appsMetaInfo) {\n    for (var additionalAppId in appsMetaInfo) {\n      updateClientMetaInfo(additionalAppId, options, appsMetaInfo[additionalAppId]);\n      delete appsMetaInfo[additionalAppId];\n    }\n\n    clearAppsMetaInfo(true);\n  }\n\n  return {\n    vm: rootVm,\n    metaInfo: metaInfo,\n    // eslint-disable-line object-shorthand\n    tags: tags\n  };\n}\n/**\n * Generates tag attributes for use on the server.\n *\n * @param  {('bodyAttrs'|'htmlAttrs'|'headAttrs')} type - the type of attributes to generate\n * @param  {Object} data - the attributes to generate\n * @return {Object} - the attribute generator\n */\n\n\nfunction attributeGenerator(options, type, data, _ref) {\n  var addSsrAttribute = _ref.addSsrAttribute;\n\n  var _ref2 = options || {},\n      attribute = _ref2.attribute,\n      ssrAttribute = _ref2.ssrAttribute;\n\n  var attributeStr = '';\n\n  for (var attr in data) {\n    var attrData = data[attr];\n    var attrValues = [];\n\n    for (var appId in attrData) {\n      attrValues.push.apply(attrValues, _toConsumableArray([].concat(attrData[appId])));\n    }\n\n    if (attrValues.length) {\n      attributeStr += booleanHtmlAttributes.includes(attr) && attrValues.some(Boolean) ? \"\".concat(attr) : \"\".concat(attr, \"=\\\"\").concat(attrValues.join(' '), \"\\\"\");\n      attributeStr += ' ';\n    }\n  }\n\n  if (attributeStr) {\n    attributeStr += \"\".concat(attribute, \"=\\\"\").concat(encodeURI(JSON.stringify(data)), \"\\\"\");\n  }\n\n  if (type === 'htmlAttrs' && addSsrAttribute) {\n    return \"\".concat(ssrAttribute).concat(attributeStr ? ' ' : '').concat(attributeStr);\n  }\n\n  return attributeStr;\n}\n/**\n * Generates title output for the server\n *\n * @param  {'title'} type - the string \"title\"\n * @param  {String} data - the title text\n * @return {Object} - the title generator\n */\n\n\nfunction titleGenerator(options, type, data, generatorOptions) {\n  var _ref = generatorOptions || {},\n      ln = _ref.ln;\n\n  if (!data) {\n    return '';\n  }\n\n  return \"<\".concat(type, \">\").concat(data, \"</\").concat(type, \">\").concat(ln ? '\\n' : '');\n}\n/**\n * Generates meta, base, link, style, script, noscript tags for use on the server\n *\n * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} the name of the tag\n * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base\n * @return {Object} - the tag generator\n */\n\n\nfunction tagGenerator(options, type, tags, generatorOptions) {\n  var _ref = options || {},\n      ssrAppId = _ref.ssrAppId,\n      attribute = _ref.attribute,\n      tagIDKeyName = _ref.tagIDKeyName;\n\n  var _ref2 = generatorOptions || {},\n      appId = _ref2.appId,\n      _ref2$isSSR = _ref2.isSSR,\n      isSSR = _ref2$isSSR === void 0 ? true : _ref2$isSSR,\n      _ref2$body = _ref2.body,\n      body = _ref2$body === void 0 ? false : _ref2$body,\n      _ref2$pbody = _ref2.pbody,\n      pbody = _ref2$pbody === void 0 ? false : _ref2$pbody,\n      _ref2$ln = _ref2.ln,\n      ln = _ref2$ln === void 0 ? false : _ref2$ln;\n\n  var dataAttributes = [tagIDKeyName].concat(_toConsumableArray(commonDataAttributes));\n\n  if (!tags || !tags.length) {\n    return '';\n  } // build a string containing all tags of this type\n\n\n  return tags.reduce(function (tagsStr, tag) {\n    if (tag.skip) {\n      return tagsStr;\n    }\n\n    var tagKeys = Object.keys(tag);\n\n    if (tagKeys.length === 0) {\n      return tagsStr; // Bail on empty tag object\n    }\n\n    if (Boolean(tag.body) !== body || Boolean(tag.pbody) !== pbody) {\n      return tagsStr;\n    }\n\n    var attrs = tag.once ? '' : \" \".concat(attribute, \"=\\\"\").concat(appId || (isSSR === false ? '1' : ssrAppId), \"\\\"\"); // build a string containing all attributes of this tag\n\n    for (var attr in tag) {\n      // these attributes are treated as children on the tag\n      if (tagAttributeAsInnerContent.includes(attr) || tagProperties.includes(attr)) {\n        continue;\n      }\n\n      if (attr === 'callback') {\n        attrs += ' onload=\"this.__vm_l=1\"';\n        continue;\n      } // these form the attribute list for this tag\n\n\n      var prefix = '';\n\n      if (dataAttributes.includes(attr)) {\n        prefix = 'data-';\n      }\n\n      var isBooleanAttr = !prefix && booleanHtmlAttributes.includes(attr);\n\n      if (isBooleanAttr && !tag[attr]) {\n        continue;\n      }\n\n      attrs += \" \".concat(prefix).concat(attr) + (isBooleanAttr ? '' : \"=\\\"\".concat(tag[attr], \"\\\"\"));\n    }\n\n    var json = '';\n\n    if (tag.json) {\n      json = JSON.stringify(tag.json);\n    } // grab child content from one of these attributes, if possible\n\n\n    var content = tag.innerHTML || tag.cssText || json; // generate tag exactly without any other redundant attribute\n    // these tags have no end tag\n\n    var hasEndTag = !tagsWithoutEndTag.includes(type); // these tag types will have content inserted\n\n    var hasContent = hasEndTag && tagsWithInnerContent.includes(type); // the final string for this specific tag\n\n    return \"\".concat(tagsStr, \"<\").concat(type).concat(attrs).concat(!hasContent && hasEndTag ? '/' : '', \">\") + (hasContent ? \"\".concat(content, \"</\").concat(type, \">\") : '') + (ln ? '\\n' : '');\n  }, '');\n}\n/**\n * Converts a meta info property to one that can be stringified on the server\n *\n * @param  {String} type - the type of data to convert\n * @param  {(String|Object|Array<Object>)} data - the data value\n * @return {Object} - the new injector\n */\n\n\nfunction generateServerInjector(options, metaInfo, globalInjectOptions) {\n  var serverInjector = {\n    data: metaInfo,\n    extraData: undefined,\n    addInfo: function addInfo(appId, metaInfo) {\n      this.extraData = this.extraData || {};\n      this.extraData[appId] = metaInfo;\n    },\n    callInjectors: function callInjectors(opts) {\n      var m = this.injectors; // only call title for the head\n\n      return (opts.body || opts.pbody ? '' : m.title.text(opts)) + m.meta.text(opts) + m.base.text(opts) + m.link.text(opts) + m.style.text(opts) + m.script.text(opts) + m.noscript.text(opts);\n    },\n    injectors: {\n      head: function head(ln) {\n        return serverInjector.callInjectors(_objectSpread2(_objectSpread2({}, globalInjectOptions), {}, {\n          ln: ln\n        }));\n      },\n      bodyPrepend: function bodyPrepend(ln) {\n        return serverInjector.callInjectors(_objectSpread2(_objectSpread2({}, globalInjectOptions), {}, {\n          ln: ln,\n          pbody: true\n        }));\n      },\n      bodyAppend: function bodyAppend(ln) {\n        return serverInjector.callInjectors(_objectSpread2(_objectSpread2({}, globalInjectOptions), {}, {\n          ln: ln,\n          body: true\n        }));\n      }\n    }\n  };\n\n  var _loop = function _loop(type) {\n    if (metaInfoOptionKeys.includes(type)) {\n      return \"continue\";\n    }\n\n    serverInjector.injectors[type] = {\n      text: function text(injectOptions) {\n        var addSsrAttribute = injectOptions === true;\n        injectOptions = _objectSpread2(_objectSpread2({\n          addSsrAttribute: addSsrAttribute\n        }, globalInjectOptions), injectOptions);\n\n        if (type === 'title') {\n          return titleGenerator(options, type, serverInjector.data[type], injectOptions);\n        }\n\n        if (metaInfoAttributeKeys.includes(type)) {\n          var attributeData = {};\n          var data = serverInjector.data[type];\n\n          if (data) {\n            var appId = injectOptions.isSSR === false ? '1' : options.ssrAppId;\n\n            for (var attr in data) {\n              attributeData[attr] = _defineProperty({}, appId, data[attr]);\n            }\n          }\n\n          if (serverInjector.extraData) {\n            for (var _appId in serverInjector.extraData) {\n              var _data = serverInjector.extraData[_appId][type];\n\n              if (_data) {\n                for (var _attr in _data) {\n                  attributeData[_attr] = _objectSpread2(_objectSpread2({}, attributeData[_attr]), {}, _defineProperty({}, _appId, _data[_attr]));\n                }\n              }\n            }\n          }\n\n          return attributeGenerator(options, type, attributeData, injectOptions);\n        }\n\n        var str = tagGenerator(options, type, serverInjector.data[type], injectOptions);\n\n        if (serverInjector.extraData) {\n          for (var _appId2 in serverInjector.extraData) {\n            var _data2 = serverInjector.extraData[_appId2][type];\n            var extraStr = tagGenerator(options, type, _data2, _objectSpread2({\n              appId: _appId2\n            }, injectOptions));\n            str = \"\".concat(str).concat(extraStr);\n          }\n        }\n\n        return str;\n      }\n    };\n  };\n\n  for (var type in defaultInfo) {\n    var _ret = _loop(type);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return serverInjector;\n}\n/**\n * Converts the state of the meta info object such that each item\n * can be compiled to a tag string on the server\n *\n * @vm {Object} - Vue instance - ideally the root component\n * @return {Object} - server meta info with `toString` methods\n */\n\n\nfunction inject(rootVm, options, injectOptions) {\n  // make sure vue-meta was initiated\n  if (!rootVm[rootConfigKey]) {\n    showWarningNotSupported();\n    return {};\n  } // collect & aggregate all metaInfo $options\n\n\n  var rawInfo = getComponentMetaInfo(options, rootVm);\n  var metaInfo = getMetaInfo(options, rawInfo, serverSequences, rootVm); // generate server injector\n\n  var serverInjector = generateServerInjector(options, metaInfo, injectOptions); // add meta info from additional apps\n\n  var appsMetaInfo = getAppsMetaInfo();\n\n  if (appsMetaInfo) {\n    for (var additionalAppId in appsMetaInfo) {\n      serverInjector.addInfo(additionalAppId, appsMetaInfo[additionalAppId]);\n      delete appsMetaInfo[additionalAppId];\n    }\n\n    clearAppsMetaInfo(true);\n  }\n\n  return serverInjector.injectors;\n}\n\nfunction $meta(options) {\n  options = options || {};\n  /**\n   * Returns an injector for server-side rendering.\n   * @this {Object} - the Vue instance (a root component)\n   * @return {Object} - injector\n   */\n\n  var $root = this.$root;\n  return {\n    getOptions: function getOptions$1() {\n      return getOptions(options);\n    },\n    setOptions: function setOptions(newOptions) {\n      var refreshNavKey = 'refreshOnceOnNavigation';\n\n      if (newOptions && newOptions[refreshNavKey]) {\n        options.refreshOnceOnNavigation = !!newOptions[refreshNavKey];\n        addNavGuards($root);\n      }\n\n      var debounceWaitKey = 'debounceWait';\n\n      if (newOptions && debounceWaitKey in newOptions) {\n        var debounceWait = parseInt(newOptions[debounceWaitKey]);\n\n        if (!isNaN(debounceWait)) {\n          options.debounceWait = debounceWait;\n        }\n      }\n\n      var waitOnDestroyedKey = 'waitOnDestroyed';\n\n      if (newOptions && waitOnDestroyedKey in newOptions) {\n        options.waitOnDestroyed = !!newOptions[waitOnDestroyedKey];\n      }\n    },\n    refresh: function refresh$1() {\n      return refresh($root, options);\n    },\n    inject: function inject$1(injectOptions) {\n      return inject($root, options, injectOptions);\n    },\n    pause: function pause$1() {\n      return pause($root);\n    },\n    resume: function resume$1() {\n      return resume($root);\n    },\n    addApp: function addApp$1(appId) {\n      return addApp($root, appId, options);\n    }\n  };\n}\n\nfunction generate(rawInfo, options) {\n  options = setOptions(options);\n  var metaInfo = getMetaInfo(options, rawInfo, serverSequences);\n  var serverInjector = generateServerInjector(options, metaInfo);\n  return serverInjector.injectors;\n}\n/**\n * Plugin install function.\n * @param {Function} Vue - the Vue constructor.\n */\n\n\nfunction install(Vue, options) {\n  if (Vue.__vuemeta_installed) {\n    return;\n  }\n\n  Vue.__vuemeta_installed = true;\n  options = setOptions(options);\n\n  Vue.prototype.$meta = function () {\n    return $meta.call(this, options);\n  };\n\n  Vue.mixin(createMixin(Vue, options));\n}\n\nvar index = {\n  version: version,\n  install: install,\n  generate: function generate$1(metaInfo, options) {\n    return generate(metaInfo, options);\n  },\n  hasMetaInfo: hasMetaInfo\n};\nexport default index;","map":{"version":3,"names":["deepmerge","version","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","from","o","minLen","n","toString","call","slice","name","test","len","arr2","TypeError","_createForOfIteratorHelper","allowArrayLike","it","F","s","done","e","f","normalCompletion","didErr","err","step","next","return","arg","isUndefined","isObject","isPureObject","isFunction","isString","hasGlobalWindowFn","window","hasGlobalWindow","_global","global","console","warn","str","showWarningNotSupported","defaultInfo","title","undefined","titleChunk","titleTemplate","htmlAttrs","bodyAttrs","headAttrs","base","link","meta","style","script","noscript","__dangerouslyDisableSanitizers","__dangerouslyDisableSanitizersByTagID","rootConfigKey","keyName","attribute","ssrAttribute","tagIDKeyName","metaTemplateKeyName","contentKeyName","ssrAppId","debounceWait","waitOnDestroyed","defaultOptions","defaultInfoKeys","disableOptionKeys","metaInfoOptionKeys","concat","metaInfoAttributeKeys","tagsSupportingOnload","tagsWithoutEndTag","tagsWithInnerContent","tagAttributeAsInnerContent","tagProperties","commonDataAttributes","booleanHtmlAttributes","batchId","triggerUpdate","_ref","rootVm","hookName","initialized","initializing","pausing","batchUpdate","$meta","refresh","callback","timeout","clearTimeout","setTimeout","find","array","predicate","thisArg","idx","findIndex","toArray","includes","querySelector","el","document","querySelectorAll","getTag","tags","tag","getElementsByTagName","getElementsKey","body","pbody","queryElements","parentNode","_ref2","attributes","appId","type","queries","map","query","val","attributeValue","join","removeElementsByAppId","_ref3","remove","removeAttribute","attributeName","hasMetaInfo","vm","inMetaInfoBranch","pause","resume","addNavGuards","router","$router","navGuards","beforeEach","to","afterEach","$nextTick","_resume","metaInfo","afterNavigation","createMixin","Vue","options","updateOnLifecycleHook","wasServerRendered","beforeCreate","_this2","rootKey","$root","$options","devtoolsEnabled","config","devtools","get","deprecationWarningShown","$once","$el","nodeType","hasAttribute","htmlTag","child","$children","c","$vnode","fnOptions","parent","$parent","computed","$metaInfo","$isServer","$on","$watch","initializedSsr","_$root$$meta$refresh","refreshOnceOnNavigation","_this","_hasMetaInfo","offsetParent","interval","setInterval","clearInterval","lifecycleHook","setOptions","getOptions","optionsCopy","ensureIsArray","serverSequences","clientSequences","escape","info","escapeOptions","escapeKeys","_escapeOptions$doEsca","doEscape","v","escaped","disableKey","tagId","escapedKey","escapeMetaInfo","escapeSequences","reduce","seq","replace","index","applyTemplate","headObject","template","chunk","component","_arrayMerge","destination","targetItem","targetIndex","sourceIndex","item","sourceItem","innerHTML","splice","targetTemplate","sourceTemplate","warningShown","merge","attrKey","arrayMerge","t","getComponentMetaInfo","getComponentOption","result","_inactive","_options","data","childComponent","callbacks","isDOMComplete","d","readyState","addCallback","addCallbacks","autoAddListeners","hasAsyncCallback","addListeners","applyCallbacks","onreadystatechange","matchElement","args","selector","elements","matches","element","__vm_cb","onload","__vm_l","__vm_ev","addEventListener","attributeMap","updateAttribute","attrs","vueMetaAttrString","getAttribute","JSON","parse","decodeURI","toUpdate","attr","_attr","attrData","_i","_toUpdate","_attr2","_attrData","attrValues","_appId","attrValue","some","Boolean","setAttribute","updateTitle","updateTag","head","dataAttributes","newElements","queryOptions","currentElements","found","x","k","stringify","res","skip","newElement","createElement","once","json","styleSheet","cssText","appendChild","createTextNode","isBooleanAttribute","oldElements","indexToDelete","hasEqualElement","existingTag","isEqualNode","_type","removeChild","insertBefore","firstChild","oldTags","newTags","updateClientMetaInfo","newInfo","addLoadListeners","tagsAdded","tagsRemoved","tagName","substr","_updateTag","appsMetaInfo","addApp","set","setMetaInfo","removeMetaInfo","_iterator","_step","clearAppsMetaInfo","getAppsMetaInfo","force","getMetaInfo","metaItem","hasVmid","isFirstItemForVmid","metaObject","rawInfo","changed","addedTags","removedTags","additionalAppId","attributeGenerator","addSsrAttribute","attributeStr","encodeURI","titleGenerator","generatorOptions","ln","tagGenerator","_ref2$isSSR","isSSR","_ref2$body","_ref2$pbody","_ref2$ln","tagsStr","tagKeys","prefix","isBooleanAttr","content","hasEndTag","hasContent","generateServerInjector","globalInjectOptions","serverInjector","extraData","addInfo","callInjectors","opts","m","injectors","text","bodyPrepend","bodyAppend","_loop","injectOptions","attributeData","_data","_appId2","_data2","extraStr","_ret","inject","getOptions$1","newOptions","refreshNavKey","debounceWaitKey","parseInt","isNaN","waitOnDestroyedKey","refresh$1","inject$1","pause$1","resume$1","addApp$1","generate","install","__vuemeta_installed","mixin","generate$1"],"sources":["C:/Users/Jalil/Desktop/CESI-EATS/frontend/CESI-EATS/node_modules/vue-meta/dist/vue-meta.esm.js"],"sourcesContent":["/**\n * vue-meta v2.4.0\n * (c) 2020\n * - Declan de Wet\n * - SÃ©bastien Chopin (@Atinux)\n * - Pim (@pimlie)\n * - All the amazing contributors\n * @license MIT\n */\n\nimport deepmerge from 'deepmerge';\n\nvar version = \"2.4.0\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\n/**\n * checks if passed argument is an array\n * @param  {any}  arg - the object to check\n * @return {Boolean} - true if `arg` is an array\n */\nfunction isArray(arg) {\n  return Array.isArray(arg);\n}\nfunction isUndefined(arg) {\n  return typeof arg === 'undefined';\n}\nfunction isObject(arg) {\n  return _typeof(arg) === 'object';\n}\nfunction isPureObject(arg) {\n  return _typeof(arg) === 'object' && arg !== null;\n}\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction hasGlobalWindowFn() {\n  try {\n    return !isUndefined(window);\n  } catch (e) {\n    return false;\n  }\n}\nvar hasGlobalWindow = hasGlobalWindowFn();\n\nvar _global = hasGlobalWindow ? window : global;\n\nvar console = _global.console || {};\nfunction warn(str) {\n  /* istanbul ignore next */\n  if (!console || !console.warn) {\n    return;\n  }\n\n  console.warn(str);\n}\nvar showWarningNotSupported = function showWarningNotSupported() {\n  return warn('This vue app/component has no vue-meta configuration');\n};\n\n/**\n * These are constant variables used throughout the application.\n */\n// set some sane defaults\nvar defaultInfo = {\n  title: undefined,\n  titleChunk: '',\n  titleTemplate: '%s',\n  htmlAttrs: {},\n  bodyAttrs: {},\n  headAttrs: {},\n  base: [],\n  link: [],\n  meta: [],\n  style: [],\n  script: [],\n  noscript: [],\n  __dangerouslyDisableSanitizers: [],\n  __dangerouslyDisableSanitizersByTagID: {}\n};\nvar rootConfigKey = '_vueMeta'; // This is the name of the component option that contains all the information that\n// gets converted to the various meta tags & attributes for the page.\n\nvar keyName = 'metaInfo'; // This is the attribute vue-meta arguments on elements to know which it should\n// manage and which it should ignore.\n\nvar attribute = 'data-vue-meta'; // This is the attribute that goes on the `html` tag to inform `vue-meta`\n// that the server has already generated the meta tags for the initial render.\n\nvar ssrAttribute = 'data-vue-meta-server-rendered'; // This is the property that tells vue-meta to overwrite (instead of append)\n// an item in a tag list. For example, if you have two `meta` tag list items\n// that both have `vmid` of \"description\", then vue-meta will overwrite the\n// shallowest one with the deepest one.\n\nvar tagIDKeyName = 'vmid'; // This is the key name for possible meta templates\n\nvar metaTemplateKeyName = 'template'; // This is the key name for the content-holding property\n\nvar contentKeyName = 'content'; // The id used for the ssr app\n\nvar ssrAppId = 'ssr'; // How long meta update\n\nvar debounceWait = 10; // How long meta update\n\nvar waitOnDestroyed = true;\nvar defaultOptions = {\n  keyName: keyName,\n  attribute: attribute,\n  ssrAttribute: ssrAttribute,\n  tagIDKeyName: tagIDKeyName,\n  contentKeyName: contentKeyName,\n  metaTemplateKeyName: metaTemplateKeyName,\n  waitOnDestroyed: waitOnDestroyed,\n  debounceWait: debounceWait,\n  ssrAppId: ssrAppId\n}; // might be a bit ugly, but minimizes the browser bundles a bit\n\nvar defaultInfoKeys = Object.keys(defaultInfo); // The metaInfo property keys which are used to disable escaping\n\nvar disableOptionKeys = [defaultInfoKeys[12], defaultInfoKeys[13]]; // List of metaInfo property keys which are configuration options (and dont generate html)\n\nvar metaInfoOptionKeys = [defaultInfoKeys[1], defaultInfoKeys[2], 'changed'].concat(disableOptionKeys); // List of metaInfo property keys which only generates attributes and no tags\n\nvar metaInfoAttributeKeys = [defaultInfoKeys[3], defaultInfoKeys[4], defaultInfoKeys[5]]; // HTML elements which support the onload event\n\nvar tagsSupportingOnload = ['link', 'style', 'script']; // HTML elements which dont have a head tag (shortened to our needs)\n// see: https://www.w3.org/TR/html52/document-metadata.html\n\nvar tagsWithoutEndTag = ['base', 'meta', 'link']; // HTML elements which can have inner content (shortened to our needs)\n\nvar tagsWithInnerContent = ['noscript', 'script', 'style']; // Attributes which are inserted as childNodes instead of HTMLAttribute\n\nvar tagAttributeAsInnerContent = ['innerHTML', 'cssText', 'json'];\nvar tagProperties = ['once', 'skip', 'template']; // Attributes which should be added with data- prefix\n\nvar commonDataAttributes = ['body', 'pbody']; // from: https://github.com/kangax/html-minifier/blob/gh-pages/src/htmlminifier.js#L202\n\nvar booleanHtmlAttributes = ['allowfullscreen', 'amp', 'amp-boilerplate', 'async', 'autofocus', 'autoplay', 'checked', 'compact', 'controls', 'declare', 'default', 'defaultchecked', 'defaultmuted', 'defaultselected', 'defer', 'disabled', 'enabled', 'formnovalidate', 'hidden', 'indeterminate', 'inert', 'ismap', 'itemscope', 'loop', 'multiple', 'muted', 'nohref', 'noresize', 'noshade', 'novalidate', 'nowrap', 'open', 'pauseonexit', 'readonly', 'required', 'reversed', 'scoped', 'seamless', 'selected', 'sortable', 'truespeed', 'typemustmatch', 'visible'];\n\nvar batchId = null;\nfunction triggerUpdate(_ref, rootVm, hookName) {\n  var debounceWait = _ref.debounceWait;\n\n  // if an update was triggered during initialization or when an update was triggered by the\n  // metaInfo watcher, set initialized to null\n  // then we keep falsy value but know we need to run a triggerUpdate after initialization\n  if (!rootVm[rootConfigKey].initialized && (rootVm[rootConfigKey].initializing || hookName === 'watcher')) {\n    rootVm[rootConfigKey].initialized = null;\n  }\n\n  if (rootVm[rootConfigKey].initialized && !rootVm[rootConfigKey].pausing) {\n    // batch potential DOM updates to prevent extraneous re-rendering\n    // eslint-disable-next-line no-void\n    batchUpdate(function () {\n      return void rootVm.$meta().refresh();\n    }, debounceWait);\n  }\n}\n/**\n * Performs a batched update.\n *\n * @param  {(null|Number)} id - the ID of this update\n * @param  {Function} callback - the update to perform\n * @return {Number} id - a new ID\n */\n\nfunction batchUpdate(callback, timeout) {\n  timeout = timeout === undefined ? 10 : timeout;\n\n  if (!timeout) {\n    callback();\n    return;\n  }\n\n  clearTimeout(batchId);\n  batchId = setTimeout(function () {\n    callback();\n  }, timeout);\n  return batchId;\n}\n\n/*\n * To reduce build size, this file provides simple polyfills without\n * overly excessive type checking and without modifying\n * the global Array.prototype\n * The polyfills are automatically removed in the commonjs build\n * Also, only files in client/ & shared/ should use these functions\n * files in server/ still use normal js function\n */\nfunction find(array, predicate, thisArg) {\n  if ( !Array.prototype.find) {\n    // idx needs to be a Number, for..in returns string\n    for (var idx = 0; idx < array.length; idx++) {\n      if (predicate.call(thisArg, array[idx], idx, array)) {\n        return array[idx];\n      }\n    }\n\n    return;\n  }\n\n  return array.find(predicate, thisArg);\n}\nfunction findIndex(array, predicate, thisArg) {\n  if ( !Array.prototype.findIndex) {\n    // idx needs to be a Number, for..in returns string\n    for (var idx = 0; idx < array.length; idx++) {\n      if (predicate.call(thisArg, array[idx], idx, array)) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n\n  return array.findIndex(predicate, thisArg);\n}\nfunction toArray(arg) {\n  if ( !Array.from) {\n    return Array.prototype.slice.call(arg);\n  }\n\n  return Array.from(arg);\n}\nfunction includes(array, value) {\n  if ( !Array.prototype.includes) {\n    for (var idx in array) {\n      if (array[idx] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return array.includes(value);\n}\n\nvar querySelector = function querySelector(arg, el) {\n  return (el || document).querySelectorAll(arg);\n};\nfunction getTag(tags, tag) {\n  if (!tags[tag]) {\n    tags[tag] = document.getElementsByTagName(tag)[0];\n  }\n\n  return tags[tag];\n}\nfunction getElementsKey(_ref) {\n  var body = _ref.body,\n      pbody = _ref.pbody;\n  return body ? 'body' : pbody ? 'pbody' : 'head';\n}\nfunction queryElements(parentNode, _ref2, attributes) {\n  var appId = _ref2.appId,\n      attribute = _ref2.attribute,\n      type = _ref2.type,\n      tagIDKeyName = _ref2.tagIDKeyName;\n  attributes = attributes || {};\n  var queries = [\"\".concat(type, \"[\").concat(attribute, \"=\\\"\").concat(appId, \"\\\"]\"), \"\".concat(type, \"[data-\").concat(tagIDKeyName, \"]\")].map(function (query) {\n    for (var key in attributes) {\n      var val = attributes[key];\n      var attributeValue = val && val !== true ? \"=\\\"\".concat(val, \"\\\"\") : '';\n      query += \"[data-\".concat(key).concat(attributeValue, \"]\");\n    }\n\n    return query;\n  });\n  return toArray(querySelector(queries.join(', '), parentNode));\n}\nfunction removeElementsByAppId(_ref3, appId) {\n  var attribute = _ref3.attribute;\n  toArray(querySelector(\"[\".concat(attribute, \"=\\\"\").concat(appId, \"\\\"]\"))).map(function (el) {\n    return el.remove();\n  });\n}\nfunction removeAttribute(el, attributeName) {\n  el.removeAttribute(attributeName);\n}\n\nfunction hasMetaInfo(vm) {\n  vm = vm || this;\n  return vm && (vm[rootConfigKey] === true || isObject(vm[rootConfigKey]));\n} // a component is in a metaInfo branch when itself has meta info or one of its (grand-)children has\n\nfunction inMetaInfoBranch(vm) {\n  vm = vm || this;\n  return vm && !isUndefined(vm[rootConfigKey]);\n}\n\nfunction pause(rootVm, refresh) {\n  rootVm[rootConfigKey].pausing = true;\n  return function () {\n    return resume(rootVm, refresh);\n  };\n}\nfunction resume(rootVm, refresh) {\n  rootVm[rootConfigKey].pausing = false;\n\n  if (refresh || refresh === undefined) {\n    return rootVm.$meta().refresh();\n  }\n}\n\nfunction addNavGuards(rootVm) {\n  var router = rootVm.$router; // return when nav guards already added or no router exists\n\n  if (rootVm[rootConfigKey].navGuards || !router) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  rootVm[rootConfigKey].navGuards = true;\n  router.beforeEach(function (to, from, next) {\n    pause(rootVm);\n    next();\n  });\n  router.afterEach(function () {\n    rootVm.$nextTick(function () {\n      var _resume = resume(rootVm),\n          metaInfo = _resume.metaInfo;\n\n      if (metaInfo && isFunction(metaInfo.afterNavigation)) {\n        metaInfo.afterNavigation(metaInfo);\n      }\n    });\n  });\n}\n\nvar appId = 1;\nfunction createMixin(Vue, options) {\n  // for which Vue lifecycle hooks should the metaInfo be refreshed\n  var updateOnLifecycleHook = ['activated', 'deactivated', 'beforeMount'];\n  var wasServerRendered = false; // watch for client side component updates\n\n  return {\n    beforeCreate: function beforeCreate() {\n      var _this2 = this;\n\n      var rootKey = '$root';\n      var $root = this[rootKey];\n      var $options = this.$options;\n      var devtoolsEnabled = Vue.config.devtools;\n      Object.defineProperty(this, '_hasMetaInfo', {\n        configurable: true,\n        get: function get() {\n          // Show deprecation warning once when devtools enabled\n          if (devtoolsEnabled && !$root[rootConfigKey].deprecationWarningShown) {\n            warn('VueMeta DeprecationWarning: _hasMetaInfo has been deprecated and will be removed in a future version. Please use hasMetaInfo(vm) instead');\n            $root[rootConfigKey].deprecationWarningShown = true;\n          }\n\n          return hasMetaInfo(this);\n        }\n      });\n\n      if (this === $root) {\n        $root.$once('hook:beforeMount', function () {\n          wasServerRendered = this.$el && this.$el.nodeType === 1 && this.$el.hasAttribute('data-server-rendered'); // In most cases when you have a SSR app it will be the first app thats gonna be\n          // initiated, if we cant detect the data-server-rendered attribute from Vue but we\n          // do see our own ssrAttribute then _assume_ the Vue app with appId 1 is the ssr app\n          // attempted fix for #404 & #562, but we rly need to refactor how we pass appIds from\n          // ssr to the client\n\n          if (!wasServerRendered && $root[rootConfigKey] && $root[rootConfigKey].appId === 1) {\n            var htmlTag = getTag({}, 'html');\n            wasServerRendered = htmlTag && htmlTag.hasAttribute(options.ssrAttribute);\n          }\n        });\n      } // Add a marker to know if it uses metaInfo\n      // _vnode is used to know that it's attached to a real component\n      // useful if we use some mixin to add some meta tags (like nuxt-i18n)\n\n\n      if (isUndefined($options[options.keyName]) || $options[options.keyName] === null) {\n        return;\n      }\n\n      if (!$root[rootConfigKey]) {\n        $root[rootConfigKey] = {\n          appId: appId\n        };\n        appId++;\n\n        if (devtoolsEnabled && $root.$options[options.keyName]) {\n          // use nextTick so the children should be added to $root\n          this.$nextTick(function () {\n            // find the first child that lists fnOptions\n            var child = find($root.$children, function (c) {\n              return c.$vnode && c.$vnode.fnOptions;\n            });\n\n            if (child && child.$vnode.fnOptions[options.keyName]) {\n              warn(\"VueMeta has detected a possible global mixin which adds a \".concat(options.keyName, \" property to all Vue components on the page. This could cause severe performance issues. If possible, use $meta().addApp to add meta information instead\"));\n            }\n          });\n        }\n      } // to speed up updates we keep track of branches which have a component with vue-meta info defined\n      // if _vueMeta = true it has info, if _vueMeta = false a child has info\n\n\n      if (!this[rootConfigKey]) {\n        this[rootConfigKey] = true;\n        var parent = this.$parent;\n\n        while (parent && parent !== $root) {\n          if (isUndefined(parent[rootConfigKey])) {\n            parent[rootConfigKey] = false;\n          }\n\n          parent = parent.$parent;\n        }\n      } // coerce function-style metaInfo to a computed prop so we can observe\n      // it on creation\n\n\n      if (isFunction($options[options.keyName])) {\n        $options.computed = $options.computed || {};\n        $options.computed.$metaInfo = $options[options.keyName];\n\n        if (!this.$isServer) {\n          // if computed $metaInfo exists, watch it for updates & trigger a refresh\n          // when it changes (i.e. automatically handle async actions that affect metaInfo)\n          // credit for this suggestion goes to [SÃ©bastien Chopin](https://github.com/Atinux)\n          this.$on('hook:created', function () {\n            this.$watch('$metaInfo', function () {\n              triggerUpdate(options, this[rootKey], 'watcher');\n            });\n          });\n        }\n      } // force an initial refresh on page load and prevent other lifecycleHooks\n      // to triggerUpdate until this initial refresh is finished\n      // this is to make sure that when a page is opened in an inactive tab which\n      // has throttled rAF/timers we still immediately set the page title\n\n\n      if (isUndefined($root[rootConfigKey].initialized)) {\n        $root[rootConfigKey].initialized = this.$isServer;\n\n        if (!$root[rootConfigKey].initialized) {\n          if (!$root[rootConfigKey].initializedSsr) {\n            $root[rootConfigKey].initializedSsr = true;\n            this.$on('hook:beforeMount', function () {\n              var $root = this[rootKey]; // if this Vue-app was server rendered, set the appId to 'ssr'\n              // only one SSR app per page is supported\n\n              if (wasServerRendered) {\n                $root[rootConfigKey].appId = options.ssrAppId;\n              }\n            });\n          } // we use the mounted hook here as on page load\n\n\n          this.$on('hook:mounted', function () {\n            var $root = this[rootKey];\n\n            if ($root[rootConfigKey].initialized) {\n              return;\n            } // used in triggerUpdate to check if a change was triggered\n            // during initialization\n\n\n            $root[rootConfigKey].initializing = true; // refresh meta in nextTick so all child components have loaded\n\n            this.$nextTick(function () {\n              var _$root$$meta$refresh = $root.$meta().refresh(),\n                  tags = _$root$$meta$refresh.tags,\n                  metaInfo = _$root$$meta$refresh.metaInfo; // After ssr hydration (identifier by tags === false) check\n              // if initialized was set to null in triggerUpdate. That'd mean\n              // that during initilazation changes where triggered which need\n              // to be applied OR a metaInfo watcher was triggered before the\n              // current hook was called\n              // (during initialization all changes are blocked)\n\n\n              if (tags === false && $root[rootConfigKey].initialized === null) {\n                this.$nextTick(function () {\n                  return triggerUpdate(options, $root, 'init');\n                });\n              }\n\n              $root[rootConfigKey].initialized = true;\n              delete $root[rootConfigKey].initializing; // add the navigation guards if they havent been added yet\n              // they are needed for the afterNavigation callback\n\n              if (!options.refreshOnceOnNavigation && metaInfo.afterNavigation) {\n                addNavGuards($root);\n              }\n            });\n          }); // add the navigation guards if requested\n\n          if (options.refreshOnceOnNavigation) {\n            addNavGuards($root);\n          }\n        }\n      }\n\n      this.$on('hook:destroyed', function () {\n        var _this = this;\n\n        // do not trigger refresh:\n        // - when user configured to not wait for transitions on destroyed\n        // - when the component doesnt have a parent\n        // - doesnt have metaInfo defined\n        if (!this.$parent || !hasMetaInfo(this)) {\n          return;\n        }\n\n        delete this._hasMetaInfo;\n        this.$nextTick(function () {\n          if (!options.waitOnDestroyed || !_this.$el || !_this.$el.offsetParent) {\n            triggerUpdate(options, _this.$root, 'destroyed');\n            return;\n          } // Wait that element is hidden before refreshing meta tags (to support animations)\n\n\n          var interval = setInterval(function () {\n            if (_this.$el && _this.$el.offsetParent !== null) {\n              /* istanbul ignore next line */\n              return;\n            }\n\n            clearInterval(interval);\n            triggerUpdate(options, _this.$root, 'destroyed');\n          }, 50);\n        });\n      }); // do not trigger refresh on the server side\n\n      if (this.$isServer) {\n        /* istanbul ignore next */\n        return;\n      } // no need to add this hooks on server side\n\n\n      updateOnLifecycleHook.forEach(function (lifecycleHook) {\n        _this2.$on(\"hook:\".concat(lifecycleHook), function () {\n          triggerUpdate(options, this[rootKey], lifecycleHook);\n        });\n      });\n    }\n  };\n}\n\nfunction setOptions(options) {\n  // combine options\n  options = isObject(options) ? options : {}; // The options are set like this so they can\n  // be minified by terser while keeping the\n  // user api intact\n  // terser --mangle-properties keep_quoted=strict\n\n  /* eslint-disable dot-notation */\n\n  return {\n    keyName: options['keyName'] || defaultOptions.keyName,\n    attribute: options['attribute'] || defaultOptions.attribute,\n    ssrAttribute: options['ssrAttribute'] || defaultOptions.ssrAttribute,\n    tagIDKeyName: options['tagIDKeyName'] || defaultOptions.tagIDKeyName,\n    contentKeyName: options['contentKeyName'] || defaultOptions.contentKeyName,\n    metaTemplateKeyName: options['metaTemplateKeyName'] || defaultOptions.metaTemplateKeyName,\n    debounceWait: isUndefined(options['debounceWait']) ? defaultOptions.debounceWait : options['debounceWait'],\n    waitOnDestroyed: isUndefined(options['waitOnDestroyed']) ? defaultOptions.waitOnDestroyed : options['waitOnDestroyed'],\n    ssrAppId: options['ssrAppId'] || defaultOptions.ssrAppId,\n    refreshOnceOnNavigation: !!options['refreshOnceOnNavigation']\n  };\n  /* eslint-enable dot-notation */\n}\nfunction getOptions(options) {\n  var optionsCopy = {};\n\n  for (var key in options) {\n    optionsCopy[key] = options[key];\n  }\n\n  return optionsCopy;\n}\n\nfunction ensureIsArray(arg, key) {\n  if (!key || !isObject(arg)) {\n    return isArray(arg) ? arg : [];\n  }\n\n  if (!isArray(arg[key])) {\n    arg[key] = [];\n  }\n\n  return arg;\n}\n\nvar serverSequences = [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;'], [/\"/g, '&quot;'], [/'/g, '&#x27;']];\nvar clientSequences = [[/&/g, \"&\"], [/</g, \"<\"], [/>/g, \">\"], [/\"/g, \"\\\"\"], [/'/g, \"'\"]]; // sanitizes potentially dangerous characters\n\nfunction escape(info, options, escapeOptions, escapeKeys) {\n  var tagIDKeyName = options.tagIDKeyName;\n  var _escapeOptions$doEsca = escapeOptions.doEscape,\n      doEscape = _escapeOptions$doEsca === void 0 ? function (v) {\n    return v;\n  } : _escapeOptions$doEsca;\n  var escaped = {};\n\n  for (var key in info) {\n    var value = info[key]; // no need to escape configuration options\n\n    if (includes(metaInfoOptionKeys, key)) {\n      escaped[key] = value;\n      continue;\n    } // do not use destructuring for disableOptionKeys, it increases transpiled size\n    // due to var checks while we are guaranteed the structure of the cb\n\n\n    var disableKey = disableOptionKeys[0];\n\n    if (escapeOptions[disableKey] && includes(escapeOptions[disableKey], key)) {\n      // this info[key] doesnt need to escaped if the option is listed in __dangerouslyDisableSanitizers\n      escaped[key] = value;\n      continue;\n    }\n\n    var tagId = info[tagIDKeyName];\n\n    if (tagId) {\n      disableKey = disableOptionKeys[1]; // keys which are listed in __dangerouslyDisableSanitizersByTagID for the current vmid do not need to be escaped\n\n      if (escapeOptions[disableKey] && escapeOptions[disableKey][tagId] && includes(escapeOptions[disableKey][tagId], key)) {\n        escaped[key] = value;\n        continue;\n      }\n    }\n\n    if (isString(value)) {\n      escaped[key] = doEscape(value);\n    } else if (isArray(value)) {\n      escaped[key] = value.map(function (v) {\n        if (isPureObject(v)) {\n          return escape(v, options, escapeOptions, true);\n        }\n\n        return doEscape(v);\n      });\n    } else if (isPureObject(value)) {\n      escaped[key] = escape(value, options, escapeOptions, true);\n    } else {\n      escaped[key] = value;\n    }\n\n    if (escapeKeys) {\n      var escapedKey = doEscape(key);\n\n      if (key !== escapedKey) {\n        escaped[escapedKey] = escaped[key];\n        delete escaped[key];\n      }\n    }\n  }\n\n  return escaped;\n}\nfunction escapeMetaInfo(options, info, escapeSequences) {\n  escapeSequences = escapeSequences || []; // do not use destructuring for seq, it increases transpiled size\n  // due to var checks while we are guaranteed the structure of the cb\n\n  var escapeOptions = {\n    doEscape: function doEscape(value) {\n      return escapeSequences.reduce(function (val, seq) {\n        return val.replace(seq[0], seq[1]);\n      }, value);\n    }\n  };\n  disableOptionKeys.forEach(function (disableKey, index) {\n    if (index === 0) {\n      ensureIsArray(info, disableKey);\n    } else if (index === 1) {\n      for (var key in info[disableKey]) {\n        ensureIsArray(info[disableKey], key);\n      }\n    }\n\n    escapeOptions[disableKey] = info[disableKey];\n  }); // begin sanitization\n\n  return escape(info, options, escapeOptions);\n}\n\nfunction applyTemplate(_ref, headObject, template, chunk) {\n  var component = _ref.component,\n      metaTemplateKeyName = _ref.metaTemplateKeyName,\n      contentKeyName = _ref.contentKeyName;\n\n  if (template === true || headObject[metaTemplateKeyName] === true) {\n    // abort, template was already applied\n    return false;\n  }\n\n  if (isUndefined(template) && headObject[metaTemplateKeyName]) {\n    template = headObject[metaTemplateKeyName];\n    headObject[metaTemplateKeyName] = true;\n  } // return early if no template defined\n\n\n  if (!template) {\n    // cleanup faulty template properties\n    delete headObject[metaTemplateKeyName];\n    return false;\n  }\n\n  if (isUndefined(chunk)) {\n    chunk = headObject[contentKeyName];\n  }\n\n  headObject[contentKeyName] = isFunction(template) ? template.call(component, chunk) : template.replace(/%s/g, chunk);\n  return true;\n}\n\nfunction _arrayMerge(_ref, target, source) {\n  var component = _ref.component,\n      tagIDKeyName = _ref.tagIDKeyName,\n      metaTemplateKeyName = _ref.metaTemplateKeyName,\n      contentKeyName = _ref.contentKeyName;\n  // we concat the arrays without merging objects contained in,\n  // but we check for a `vmid` property on each object in the array\n  // using an O(1) lookup associative array exploit\n  var destination = [];\n\n  if (!target.length && !source.length) {\n    return destination;\n  }\n\n  target.forEach(function (targetItem, targetIndex) {\n    // no tagID so no need to check for duplicity\n    if (!targetItem[tagIDKeyName]) {\n      destination.push(targetItem);\n      return;\n    }\n\n    var sourceIndex = findIndex(source, function (item) {\n      return item[tagIDKeyName] === targetItem[tagIDKeyName];\n    });\n    var sourceItem = source[sourceIndex]; // source doesnt contain any duplicate vmid's, we can keep targetItem\n\n    if (sourceIndex === -1) {\n      destination.push(targetItem);\n      return;\n    } // when sourceItem explictly defines contentKeyName or innerHTML as undefined, its\n    // an indication that we need to skip the default behaviour or child has preference over parent\n    // which means we keep the targetItem and ignore/remove the sourceItem\n\n\n    if (contentKeyName in sourceItem && sourceItem[contentKeyName] === undefined || 'innerHTML' in sourceItem && sourceItem.innerHTML === undefined) {\n      destination.push(targetItem); // remove current index from source array so its not concatenated to destination below\n\n      source.splice(sourceIndex, 1);\n      return;\n    } // we now know that targetItem is a duplicate and we should ignore it in favor of sourceItem\n    // if source specifies null as content then ignore both the target as the source\n\n\n    if (sourceItem[contentKeyName] === null || sourceItem.innerHTML === null) {\n      // remove current index from source array so its not concatenated to destination below\n      source.splice(sourceIndex, 1);\n      return;\n    } // now we only need to check if the target has a template to combine it with the source\n\n\n    var targetTemplate = targetItem[metaTemplateKeyName];\n\n    if (!targetTemplate) {\n      return;\n    }\n\n    var sourceTemplate = sourceItem[metaTemplateKeyName];\n\n    if (!sourceTemplate) {\n      // use parent template and child content\n      applyTemplate({\n        component: component,\n        metaTemplateKeyName: metaTemplateKeyName,\n        contentKeyName: contentKeyName\n      }, sourceItem, targetTemplate); // set template to true to indicate template was already applied\n\n      sourceItem.template = true;\n      return;\n    }\n\n    if (!sourceItem[contentKeyName]) {\n      // use parent content and child template\n      applyTemplate({\n        component: component,\n        metaTemplateKeyName: metaTemplateKeyName,\n        contentKeyName: contentKeyName\n      }, sourceItem, undefined, targetItem[contentKeyName]);\n    }\n  });\n  return destination.concat(source);\n}\nvar warningShown = false;\nfunction merge(target, source, options) {\n  options = options || {}; // remove properties explicitly set to false so child components can\n  // optionally _not_ overwrite the parents content\n  // (for array properties this is checked in arrayMerge)\n\n  if (source.title === undefined) {\n    delete source.title;\n  }\n\n  metaInfoAttributeKeys.forEach(function (attrKey) {\n    if (!source[attrKey]) {\n      return;\n    }\n\n    for (var key in source[attrKey]) {\n      if (key in source[attrKey] && source[attrKey][key] === undefined) {\n        if (includes(booleanHtmlAttributes, key) && !warningShown) {\n          warn('VueMeta: Please note that since v2 the value undefined is not used to indicate boolean attributes anymore, see migration guide for details');\n          warningShown = true;\n        }\n\n        delete source[attrKey][key];\n      }\n    }\n  });\n  return deepmerge(target, source, {\n    arrayMerge: function arrayMerge(t, s) {\n      return _arrayMerge(options, t, s);\n    }\n  });\n}\n\nfunction getComponentMetaInfo(options, component) {\n  return getComponentOption(options || {}, component, defaultInfo);\n}\n/**\n * Returns the `opts.option` $option value of the given `opts.component`.\n * If methods are encountered, they will be bound to the component context.\n * If `opts.deep` is true, will recursively merge all child component\n * `opts.option` $option values into the returned result.\n *\n * @param  {Object} opts - options\n * @param  {Object} opts.component - Vue component to fetch option data from\n * @param  {Boolean} opts.deep - look for data in child components as well?\n * @param  {Function} opts.arrayMerge - how should arrays be merged?\n * @param  {String} opts.keyName - the name of the option to look for\n * @param  {Object} [result={}] - result so far\n * @return {Object} result - final aggregated result\n */\n\nfunction getComponentOption(options, component, result) {\n  result = result || {};\n\n  if (component._inactive) {\n    return result;\n  }\n\n  options = options || {};\n  var _options = options,\n      keyName = _options.keyName;\n  var $metaInfo = component.$metaInfo,\n      $options = component.$options,\n      $children = component.$children; // only collect option data if it exists\n\n  if ($options[keyName]) {\n    // if $metaInfo exists then [keyName] was defined as a function\n    // and set to the computed prop $metaInfo in the mixin\n    // using the computed prop should be a small performance increase\n    // because Vue caches those internally\n    var data = $metaInfo || $options[keyName]; // only merge data with result when its an object\n    // eg it could be a function when metaInfo() returns undefined\n    // dueo to the or statement above\n\n    if (isObject(data)) {\n      result = merge(result, data, options);\n    }\n  } // collect & aggregate child options if deep = true\n\n\n  if ($children.length) {\n    $children.forEach(function (childComponent) {\n      // check if the childComponent is in a branch\n      // return otherwise so we dont walk all component branches unnecessarily\n      if (!inMetaInfoBranch(childComponent)) {\n        return;\n      }\n\n      result = getComponentOption(options, childComponent, result);\n    });\n  }\n\n  return result;\n}\n\nvar callbacks = [];\nfunction isDOMComplete(d) {\n  return (d || document).readyState === 'complete';\n}\nfunction addCallback(query, callback) {\n  if (arguments.length === 1) {\n    callback = query;\n    query = '';\n  }\n\n  callbacks.push([query, callback]);\n}\nfunction addCallbacks(_ref, type, tags, autoAddListeners) {\n  var tagIDKeyName = _ref.tagIDKeyName;\n  var hasAsyncCallback = false;\n  tags.forEach(function (tag) {\n    if (!tag[tagIDKeyName] || !tag.callback) {\n      return;\n    }\n\n    hasAsyncCallback = true;\n    addCallback(\"\".concat(type, \"[data-\").concat(tagIDKeyName, \"=\\\"\").concat(tag[tagIDKeyName], \"\\\"]\"), tag.callback);\n  });\n\n  if (!autoAddListeners || !hasAsyncCallback) {\n    return hasAsyncCallback;\n  }\n\n  return addListeners();\n}\nfunction addListeners() {\n  if (isDOMComplete()) {\n    applyCallbacks();\n    return;\n  } // Instead of using a MutationObserver, we just apply\n\n  /* istanbul ignore next */\n\n\n  document.onreadystatechange = function () {\n    applyCallbacks();\n  };\n}\nfunction applyCallbacks(matchElement) {\n  callbacks.forEach(function (args) {\n    // do not use destructuring for args, it increases transpiled size\n    // due to var checks while we are guaranteed the structure of the cb\n    var query = args[0];\n    var callback = args[1];\n    var selector = \"\".concat(query, \"[onload=\\\"this.__vm_l=1\\\"]\");\n    var elements = [];\n\n    if (!matchElement) {\n      elements = toArray(querySelector(selector));\n    }\n\n    if (matchElement && matchElement.matches(selector)) {\n      elements = [matchElement];\n    }\n\n    elements.forEach(function (element) {\n      /* __vm_cb: whether the load callback has been called\n       * __vm_l: set by onload attribute, whether the element was loaded\n       * __vm_ev: whether the event listener was added or not\n       */\n      if (element.__vm_cb) {\n        return;\n      }\n\n      var onload = function onload() {\n        /* Mark that the callback for this element has already been called,\n         * this prevents the callback to run twice in some (rare) conditions\n         */\n        element.__vm_cb = true;\n        /* onload needs to be removed because we only need the\n         * attribute after ssr and if we dont remove it the node\n         * will fail isEqualNode on the client\n         */\n\n        removeAttribute(element, 'onload');\n        callback(element);\n      };\n      /* IE9 doesnt seem to load scripts synchronously,\n       * causing a script sometimes/often already to be loaded\n       * when we add the event listener below (thus adding an onload event\n       * listener has no use because it will never be triggered).\n       * Therefore we add the onload attribute during ssr, and\n       * check here if it was already loaded or not\n       */\n\n\n      if (element.__vm_l) {\n        onload();\n        return;\n      }\n\n      if (!element.__vm_ev) {\n        element.__vm_ev = true;\n        element.addEventListener('load', onload);\n      }\n    });\n  });\n}\n\n// instead of adding it to the html\n\nvar attributeMap = {};\n/**\n * Updates the document's html tag attributes\n *\n * @param  {Object} attrs - the new document html attributes\n * @param  {HTMLElement} tag - the HTMLElement tag to update with new attrs\n */\n\nfunction updateAttribute(appId, options, type, attrs, tag) {\n  var _ref = options || {},\n      attribute = _ref.attribute;\n\n  var vueMetaAttrString = tag.getAttribute(attribute);\n\n  if (vueMetaAttrString) {\n    attributeMap[type] = JSON.parse(decodeURI(vueMetaAttrString));\n    removeAttribute(tag, attribute);\n  }\n\n  var data = attributeMap[type] || {};\n  var toUpdate = []; // remove attributes from the map\n  // which have been removed for this appId\n\n  for (var attr in data) {\n    if (data[attr] !== undefined && appId in data[attr]) {\n      toUpdate.push(attr);\n\n      if (!attrs[attr]) {\n        delete data[attr][appId];\n      }\n    }\n  }\n\n  for (var _attr in attrs) {\n    var attrData = data[_attr];\n\n    if (!attrData || attrData[appId] !== attrs[_attr]) {\n      toUpdate.push(_attr);\n\n      if (attrs[_attr] !== undefined) {\n        data[_attr] = data[_attr] || {};\n        data[_attr][appId] = attrs[_attr];\n      }\n    }\n  }\n\n  for (var _i = 0, _toUpdate = toUpdate; _i < _toUpdate.length; _i++) {\n    var _attr2 = _toUpdate[_i];\n    var _attrData = data[_attr2];\n    var attrValues = [];\n\n    for (var _appId in _attrData) {\n      Array.prototype.push.apply(attrValues, [].concat(_attrData[_appId]));\n    }\n\n    if (attrValues.length) {\n      var attrValue = includes(booleanHtmlAttributes, _attr2) && attrValues.some(Boolean) ? '' : attrValues.filter(function (v) {\n        return v !== undefined;\n      }).join(' ');\n      tag.setAttribute(_attr2, attrValue);\n    } else {\n      removeAttribute(tag, _attr2);\n    }\n  }\n\n  attributeMap[type] = data;\n}\n\n/**\n * Updates the document title\n *\n * @param  {String} title - the new title of the document\n */\nfunction updateTitle(title) {\n  if (!title && title !== '') {\n    return;\n  }\n\n  document.title = title;\n}\n\n/**\n * Updates meta tags inside <head> and <body> on the client. Borrowed from `react-helmet`:\n * https://github.com/nfl/react-helmet/blob/004d448f8de5f823d10f838b02317521180f34da/src/Helmet.js#L195-L245\n *\n * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} type - the name of the tag\n * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base\n * @return {Object} - a representation of what tags changed\n */\n\nfunction updateTag(appId, options, type, tags, head, body) {\n  var _ref = options || {},\n      attribute = _ref.attribute,\n      tagIDKeyName = _ref.tagIDKeyName;\n\n  var dataAttributes = commonDataAttributes.slice();\n  dataAttributes.push(tagIDKeyName);\n  var newElements = [];\n  var queryOptions = {\n    appId: appId,\n    attribute: attribute,\n    type: type,\n    tagIDKeyName: tagIDKeyName\n  };\n  var currentElements = {\n    head: queryElements(head, queryOptions),\n    pbody: queryElements(body, queryOptions, {\n      pbody: true\n    }),\n    body: queryElements(body, queryOptions, {\n      body: true\n    })\n  };\n\n  if (tags.length > 1) {\n    // remove duplicates that could have been found by merging tags\n    // which include a mixin with metaInfo and that mixin is used\n    // by multiple components on the same page\n    var found = [];\n    tags = tags.filter(function (x) {\n      var k = JSON.stringify(x);\n      var res = !includes(found, k);\n      found.push(k);\n      return res;\n    });\n  }\n\n  tags.forEach(function (tag) {\n    if (tag.skip) {\n      return;\n    }\n\n    var newElement = document.createElement(type);\n\n    if (!tag.once) {\n      newElement.setAttribute(attribute, appId);\n    }\n\n    Object.keys(tag).forEach(function (attr) {\n      /* istanbul ignore next */\n      if (includes(tagProperties, attr)) {\n        return;\n      }\n\n      if (attr === 'innerHTML') {\n        newElement.innerHTML = tag.innerHTML;\n        return;\n      }\n\n      if (attr === 'json') {\n        newElement.innerHTML = JSON.stringify(tag.json);\n        return;\n      }\n\n      if (attr === 'cssText') {\n        if (newElement.styleSheet) {\n          /* istanbul ignore next */\n          newElement.styleSheet.cssText = tag.cssText;\n        } else {\n          newElement.appendChild(document.createTextNode(tag.cssText));\n        }\n\n        return;\n      }\n\n      if (attr === 'callback') {\n        newElement.onload = function () {\n          return tag[attr](newElement);\n        };\n\n        return;\n      }\n\n      var _attr = includes(dataAttributes, attr) ? \"data-\".concat(attr) : attr;\n\n      var isBooleanAttribute = includes(booleanHtmlAttributes, attr);\n\n      if (isBooleanAttribute && !tag[attr]) {\n        return;\n      }\n\n      var value = isBooleanAttribute ? '' : tag[attr];\n      newElement.setAttribute(_attr, value);\n    });\n    var oldElements = currentElements[getElementsKey(tag)]; // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n\n    var indexToDelete;\n    var hasEqualElement = oldElements.some(function (existingTag, index) {\n      indexToDelete = index;\n      return newElement.isEqualNode(existingTag);\n    });\n\n    if (hasEqualElement && (indexToDelete || indexToDelete === 0)) {\n      oldElements.splice(indexToDelete, 1);\n    } else {\n      newElements.push(newElement);\n    }\n  });\n  var oldElements = [];\n\n  for (var _type in currentElements) {\n    Array.prototype.push.apply(oldElements, currentElements[_type]);\n  } // remove old elements\n\n\n  oldElements.forEach(function (element) {\n    element.parentNode.removeChild(element);\n  }); // insert new elements\n\n  newElements.forEach(function (element) {\n    if (element.hasAttribute('data-body')) {\n      body.appendChild(element);\n      return;\n    }\n\n    if (element.hasAttribute('data-pbody')) {\n      body.insertBefore(element, body.firstChild);\n      return;\n    }\n\n    head.appendChild(element);\n  });\n  return {\n    oldTags: oldElements,\n    newTags: newElements\n  };\n}\n\n/**\n * Performs client-side updates when new meta info is received\n *\n * @param  {Object} newInfo - the meta info to update to\n */\n\nfunction updateClientMetaInfo(appId, options, newInfo) {\n  options = options || {};\n  var _options = options,\n      ssrAttribute = _options.ssrAttribute,\n      ssrAppId = _options.ssrAppId; // only cache tags for current update\n\n  var tags = {};\n  var htmlTag = getTag(tags, 'html'); // if this is a server render, then dont update\n\n  if (appId === ssrAppId && htmlTag.hasAttribute(ssrAttribute)) {\n    // remove the server render attribute so we can update on (next) changes\n    removeAttribute(htmlTag, ssrAttribute); // add load callbacks if the\n\n    var addLoadListeners = false;\n    tagsSupportingOnload.forEach(function (type) {\n      if (newInfo[type] && addCallbacks(options, type, newInfo[type])) {\n        addLoadListeners = true;\n      }\n    });\n\n    if (addLoadListeners) {\n      addListeners();\n    }\n\n    return false;\n  } // initialize tracked changes\n\n\n  var tagsAdded = {};\n  var tagsRemoved = {};\n\n  for (var type in newInfo) {\n    // ignore these\n    if (includes(metaInfoOptionKeys, type)) {\n      continue;\n    }\n\n    if (type === 'title') {\n      // update the title\n      updateTitle(newInfo.title);\n      continue;\n    }\n\n    if (includes(metaInfoAttributeKeys, type)) {\n      var tagName = type.substr(0, 4);\n      updateAttribute(appId, options, type, newInfo[type], getTag(tags, tagName));\n      continue;\n    } // tags should always be an array, ignore if it isnt\n\n\n    if (!isArray(newInfo[type])) {\n      continue;\n    }\n\n    var _updateTag = updateTag(appId, options, type, newInfo[type], getTag(tags, 'head'), getTag(tags, 'body')),\n        oldTags = _updateTag.oldTags,\n        newTags = _updateTag.newTags;\n\n    if (newTags.length) {\n      tagsAdded[type] = newTags;\n      tagsRemoved[type] = oldTags;\n    }\n  }\n\n  return {\n    tagsAdded: tagsAdded,\n    tagsRemoved: tagsRemoved\n  };\n}\n\nvar appsMetaInfo;\nfunction addApp(rootVm, appId, options) {\n  return {\n    set: function set(metaInfo) {\n      return setMetaInfo(rootVm, appId, options, metaInfo);\n    },\n    remove: function remove() {\n      return removeMetaInfo(rootVm, appId, options);\n    }\n  };\n}\nfunction setMetaInfo(rootVm, appId, options, metaInfo) {\n  // if a vm exists _and_ its mounted then immediately update\n  if (rootVm && rootVm.$el) {\n    return updateClientMetaInfo(appId, options, metaInfo);\n  } // store for later, the info\n  // will be set on the first refresh\n\n\n  appsMetaInfo = appsMetaInfo || {};\n  appsMetaInfo[appId] = metaInfo;\n}\nfunction removeMetaInfo(rootVm, appId, options) {\n  if (rootVm && rootVm.$el) {\n    var tags = {};\n\n    var _iterator = _createForOfIteratorHelper(metaInfoAttributeKeys),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var type = _step.value;\n        var tagName = type.substr(0, 4);\n        updateAttribute(appId, options, type, {}, getTag(tags, tagName));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return removeElementsByAppId(options, appId);\n  }\n\n  if (appsMetaInfo[appId]) {\n    delete appsMetaInfo[appId];\n    clearAppsMetaInfo();\n  }\n}\nfunction getAppsMetaInfo() {\n  return appsMetaInfo;\n}\nfunction clearAppsMetaInfo(force) {\n  if (force || !Object.keys(appsMetaInfo).length) {\n    appsMetaInfo = undefined;\n  }\n}\n\n/**\n * Returns the correct meta info for the given component\n * (child components will overwrite parent meta info)\n *\n * @param  {Object} component - the Vue instance to get meta info from\n * @return {Object} - returned meta info\n */\n\nfunction getMetaInfo(options, info, escapeSequences, component) {\n  options = options || {};\n  escapeSequences = escapeSequences || [];\n  var _options = options,\n      tagIDKeyName = _options.tagIDKeyName; // Remove all \"template\" tags from meta\n  // backup the title chunk in case user wants access to it\n\n  if (info.title) {\n    info.titleChunk = info.title;\n  } // replace title with populated template\n\n\n  if (info.titleTemplate && info.titleTemplate !== '%s') {\n    applyTemplate({\n      component: component,\n      contentKeyName: 'title'\n    }, info, info.titleTemplate, info.titleChunk || '');\n  } // convert base tag to an array so it can be handled the same way\n  // as the other tags\n\n\n  if (info.base) {\n    info.base = Object.keys(info.base).length ? [info.base] : [];\n  }\n\n  if (info.meta) {\n    // remove meta items with duplicate vmid's\n    info.meta = info.meta.filter(function (metaItem, index, arr) {\n      var hasVmid = !!metaItem[tagIDKeyName];\n\n      if (!hasVmid) {\n        return true;\n      }\n\n      var isFirstItemForVmid = index === findIndex(arr, function (item) {\n        return item[tagIDKeyName] === metaItem[tagIDKeyName];\n      });\n      return isFirstItemForVmid;\n    }); // apply templates if needed\n\n    info.meta.forEach(function (metaObject) {\n      return applyTemplate(options, metaObject);\n    });\n  }\n\n  return escapeMetaInfo(options, info, escapeSequences);\n}\n\n/**\n * When called, will update the current meta info with new meta info.\n * Useful when updating meta info as the result of an asynchronous\n * action that resolves after the initial render takes place.\n *\n * Credit to [SÃ©bastien Chopin](https://github.com/Atinux) for the suggestion\n * to implement this method.\n *\n * @return {Object} - new meta info\n */\n\nfunction refresh(rootVm, options) {\n  options = options || {}; // make sure vue-meta was initiated\n\n  if (!rootVm[rootConfigKey]) {\n    showWarningNotSupported();\n    return {};\n  } // collect & aggregate all metaInfo $options\n\n\n  var rawInfo = getComponentMetaInfo(options, rootVm);\n  var metaInfo = getMetaInfo(options, rawInfo, clientSequences, rootVm);\n  var appId = rootVm[rootConfigKey].appId;\n  var tags = updateClientMetaInfo(appId, options, metaInfo); // emit \"event\" with new info\n\n  if (tags && isFunction(metaInfo.changed)) {\n    metaInfo.changed(metaInfo, tags.tagsAdded, tags.tagsRemoved);\n    tags = {\n      addedTags: tags.tagsAdded,\n      removedTags: tags.tagsRemoved\n    };\n  }\n\n  var appsMetaInfo = getAppsMetaInfo();\n\n  if (appsMetaInfo) {\n    for (var additionalAppId in appsMetaInfo) {\n      updateClientMetaInfo(additionalAppId, options, appsMetaInfo[additionalAppId]);\n      delete appsMetaInfo[additionalAppId];\n    }\n\n    clearAppsMetaInfo(true);\n  }\n\n  return {\n    vm: rootVm,\n    metaInfo: metaInfo,\n    // eslint-disable-line object-shorthand\n    tags: tags\n  };\n}\n\n/**\n * Generates tag attributes for use on the server.\n *\n * @param  {('bodyAttrs'|'htmlAttrs'|'headAttrs')} type - the type of attributes to generate\n * @param  {Object} data - the attributes to generate\n * @return {Object} - the attribute generator\n */\n\nfunction attributeGenerator(options, type, data, _ref) {\n  var addSsrAttribute = _ref.addSsrAttribute;\n\n  var _ref2 = options || {},\n      attribute = _ref2.attribute,\n      ssrAttribute = _ref2.ssrAttribute;\n\n  var attributeStr = '';\n\n  for (var attr in data) {\n    var attrData = data[attr];\n    var attrValues = [];\n\n    for (var appId in attrData) {\n      attrValues.push.apply(attrValues, _toConsumableArray([].concat(attrData[appId])));\n    }\n\n    if (attrValues.length) {\n      attributeStr += booleanHtmlAttributes.includes(attr) && attrValues.some(Boolean) ? \"\".concat(attr) : \"\".concat(attr, \"=\\\"\").concat(attrValues.join(' '), \"\\\"\");\n      attributeStr += ' ';\n    }\n  }\n\n  if (attributeStr) {\n    attributeStr += \"\".concat(attribute, \"=\\\"\").concat(encodeURI(JSON.stringify(data)), \"\\\"\");\n  }\n\n  if (type === 'htmlAttrs' && addSsrAttribute) {\n    return \"\".concat(ssrAttribute).concat(attributeStr ? ' ' : '').concat(attributeStr);\n  }\n\n  return attributeStr;\n}\n\n/**\n * Generates title output for the server\n *\n * @param  {'title'} type - the string \"title\"\n * @param  {String} data - the title text\n * @return {Object} - the title generator\n */\nfunction titleGenerator(options, type, data, generatorOptions) {\n  var _ref = generatorOptions || {},\n      ln = _ref.ln;\n\n  if (!data) {\n    return '';\n  }\n\n  return \"<\".concat(type, \">\").concat(data, \"</\").concat(type, \">\").concat(ln ? '\\n' : '');\n}\n\n/**\n * Generates meta, base, link, style, script, noscript tags for use on the server\n *\n * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} the name of the tag\n * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base\n * @return {Object} - the tag generator\n */\n\nfunction tagGenerator(options, type, tags, generatorOptions) {\n  var _ref = options || {},\n      ssrAppId = _ref.ssrAppId,\n      attribute = _ref.attribute,\n      tagIDKeyName = _ref.tagIDKeyName;\n\n  var _ref2 = generatorOptions || {},\n      appId = _ref2.appId,\n      _ref2$isSSR = _ref2.isSSR,\n      isSSR = _ref2$isSSR === void 0 ? true : _ref2$isSSR,\n      _ref2$body = _ref2.body,\n      body = _ref2$body === void 0 ? false : _ref2$body,\n      _ref2$pbody = _ref2.pbody,\n      pbody = _ref2$pbody === void 0 ? false : _ref2$pbody,\n      _ref2$ln = _ref2.ln,\n      ln = _ref2$ln === void 0 ? false : _ref2$ln;\n\n  var dataAttributes = [tagIDKeyName].concat(_toConsumableArray(commonDataAttributes));\n\n  if (!tags || !tags.length) {\n    return '';\n  } // build a string containing all tags of this type\n\n\n  return tags.reduce(function (tagsStr, tag) {\n    if (tag.skip) {\n      return tagsStr;\n    }\n\n    var tagKeys = Object.keys(tag);\n\n    if (tagKeys.length === 0) {\n      return tagsStr; // Bail on empty tag object\n    }\n\n    if (Boolean(tag.body) !== body || Boolean(tag.pbody) !== pbody) {\n      return tagsStr;\n    }\n\n    var attrs = tag.once ? '' : \" \".concat(attribute, \"=\\\"\").concat(appId || (isSSR === false ? '1' : ssrAppId), \"\\\"\"); // build a string containing all attributes of this tag\n\n    for (var attr in tag) {\n      // these attributes are treated as children on the tag\n      if (tagAttributeAsInnerContent.includes(attr) || tagProperties.includes(attr)) {\n        continue;\n      }\n\n      if (attr === 'callback') {\n        attrs += ' onload=\"this.__vm_l=1\"';\n        continue;\n      } // these form the attribute list for this tag\n\n\n      var prefix = '';\n\n      if (dataAttributes.includes(attr)) {\n        prefix = 'data-';\n      }\n\n      var isBooleanAttr = !prefix && booleanHtmlAttributes.includes(attr);\n\n      if (isBooleanAttr && !tag[attr]) {\n        continue;\n      }\n\n      attrs += \" \".concat(prefix).concat(attr) + (isBooleanAttr ? '' : \"=\\\"\".concat(tag[attr], \"\\\"\"));\n    }\n\n    var json = '';\n\n    if (tag.json) {\n      json = JSON.stringify(tag.json);\n    } // grab child content from one of these attributes, if possible\n\n\n    var content = tag.innerHTML || tag.cssText || json; // generate tag exactly without any other redundant attribute\n    // these tags have no end tag\n\n    var hasEndTag = !tagsWithoutEndTag.includes(type); // these tag types will have content inserted\n\n    var hasContent = hasEndTag && tagsWithInnerContent.includes(type); // the final string for this specific tag\n\n    return \"\".concat(tagsStr, \"<\").concat(type).concat(attrs).concat(!hasContent && hasEndTag ? '/' : '', \">\") + (hasContent ? \"\".concat(content, \"</\").concat(type, \">\") : '') + (ln ? '\\n' : '');\n  }, '');\n}\n\n/**\n * Converts a meta info property to one that can be stringified on the server\n *\n * @param  {String} type - the type of data to convert\n * @param  {(String|Object|Array<Object>)} data - the data value\n * @return {Object} - the new injector\n */\n\nfunction generateServerInjector(options, metaInfo, globalInjectOptions) {\n  var serverInjector = {\n    data: metaInfo,\n    extraData: undefined,\n    addInfo: function addInfo(appId, metaInfo) {\n      this.extraData = this.extraData || {};\n      this.extraData[appId] = metaInfo;\n    },\n    callInjectors: function callInjectors(opts) {\n      var m = this.injectors; // only call title for the head\n\n      return (opts.body || opts.pbody ? '' : m.title.text(opts)) + m.meta.text(opts) + m.base.text(opts) + m.link.text(opts) + m.style.text(opts) + m.script.text(opts) + m.noscript.text(opts);\n    },\n    injectors: {\n      head: function head(ln) {\n        return serverInjector.callInjectors(_objectSpread2(_objectSpread2({}, globalInjectOptions), {}, {\n          ln: ln\n        }));\n      },\n      bodyPrepend: function bodyPrepend(ln) {\n        return serverInjector.callInjectors(_objectSpread2(_objectSpread2({}, globalInjectOptions), {}, {\n          ln: ln,\n          pbody: true\n        }));\n      },\n      bodyAppend: function bodyAppend(ln) {\n        return serverInjector.callInjectors(_objectSpread2(_objectSpread2({}, globalInjectOptions), {}, {\n          ln: ln,\n          body: true\n        }));\n      }\n    }\n  };\n\n  var _loop = function _loop(type) {\n    if (metaInfoOptionKeys.includes(type)) {\n      return \"continue\";\n    }\n\n    serverInjector.injectors[type] = {\n      text: function text(injectOptions) {\n        var addSsrAttribute = injectOptions === true;\n        injectOptions = _objectSpread2(_objectSpread2({\n          addSsrAttribute: addSsrAttribute\n        }, globalInjectOptions), injectOptions);\n\n        if (type === 'title') {\n          return titleGenerator(options, type, serverInjector.data[type], injectOptions);\n        }\n\n        if (metaInfoAttributeKeys.includes(type)) {\n          var attributeData = {};\n          var data = serverInjector.data[type];\n\n          if (data) {\n            var appId = injectOptions.isSSR === false ? '1' : options.ssrAppId;\n\n            for (var attr in data) {\n              attributeData[attr] = _defineProperty({}, appId, data[attr]);\n            }\n          }\n\n          if (serverInjector.extraData) {\n            for (var _appId in serverInjector.extraData) {\n              var _data = serverInjector.extraData[_appId][type];\n\n              if (_data) {\n                for (var _attr in _data) {\n                  attributeData[_attr] = _objectSpread2(_objectSpread2({}, attributeData[_attr]), {}, _defineProperty({}, _appId, _data[_attr]));\n                }\n              }\n            }\n          }\n\n          return attributeGenerator(options, type, attributeData, injectOptions);\n        }\n\n        var str = tagGenerator(options, type, serverInjector.data[type], injectOptions);\n\n        if (serverInjector.extraData) {\n          for (var _appId2 in serverInjector.extraData) {\n            var _data2 = serverInjector.extraData[_appId2][type];\n            var extraStr = tagGenerator(options, type, _data2, _objectSpread2({\n              appId: _appId2\n            }, injectOptions));\n            str = \"\".concat(str).concat(extraStr);\n          }\n        }\n\n        return str;\n      }\n    };\n  };\n\n  for (var type in defaultInfo) {\n    var _ret = _loop(type);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return serverInjector;\n}\n\n/**\n * Converts the state of the meta info object such that each item\n * can be compiled to a tag string on the server\n *\n * @vm {Object} - Vue instance - ideally the root component\n * @return {Object} - server meta info with `toString` methods\n */\n\nfunction inject(rootVm, options, injectOptions) {\n  // make sure vue-meta was initiated\n  if (!rootVm[rootConfigKey]) {\n    showWarningNotSupported();\n    return {};\n  } // collect & aggregate all metaInfo $options\n\n\n  var rawInfo = getComponentMetaInfo(options, rootVm);\n  var metaInfo = getMetaInfo(options, rawInfo, serverSequences, rootVm); // generate server injector\n\n  var serverInjector = generateServerInjector(options, metaInfo, injectOptions); // add meta info from additional apps\n\n  var appsMetaInfo = getAppsMetaInfo();\n\n  if (appsMetaInfo) {\n    for (var additionalAppId in appsMetaInfo) {\n      serverInjector.addInfo(additionalAppId, appsMetaInfo[additionalAppId]);\n      delete appsMetaInfo[additionalAppId];\n    }\n\n    clearAppsMetaInfo(true);\n  }\n\n  return serverInjector.injectors;\n}\n\nfunction $meta(options) {\n  options = options || {};\n  /**\n   * Returns an injector for server-side rendering.\n   * @this {Object} - the Vue instance (a root component)\n   * @return {Object} - injector\n   */\n\n  var $root = this.$root;\n  return {\n    getOptions: function getOptions$1() {\n      return getOptions(options);\n    },\n    setOptions: function setOptions(newOptions) {\n      var refreshNavKey = 'refreshOnceOnNavigation';\n\n      if (newOptions && newOptions[refreshNavKey]) {\n        options.refreshOnceOnNavigation = !!newOptions[refreshNavKey];\n        addNavGuards($root);\n      }\n\n      var debounceWaitKey = 'debounceWait';\n\n      if (newOptions && debounceWaitKey in newOptions) {\n        var debounceWait = parseInt(newOptions[debounceWaitKey]);\n\n        if (!isNaN(debounceWait)) {\n          options.debounceWait = debounceWait;\n        }\n      }\n\n      var waitOnDestroyedKey = 'waitOnDestroyed';\n\n      if (newOptions && waitOnDestroyedKey in newOptions) {\n        options.waitOnDestroyed = !!newOptions[waitOnDestroyedKey];\n      }\n    },\n    refresh: function refresh$1() {\n      return refresh($root, options);\n    },\n    inject: function inject$1(injectOptions) {\n      return  inject($root, options, injectOptions) ;\n    },\n    pause: function pause$1() {\n      return pause($root);\n    },\n    resume: function resume$1() {\n      return resume($root);\n    },\n    addApp: function addApp$1(appId) {\n      return addApp($root, appId, options);\n    }\n  };\n}\n\nfunction generate(rawInfo, options) {\n  options = setOptions(options);\n  var metaInfo = getMetaInfo(options, rawInfo, serverSequences);\n  var serverInjector = generateServerInjector(options, metaInfo);\n  return serverInjector.injectors;\n}\n\n/**\n * Plugin install function.\n * @param {Function} Vue - the Vue constructor.\n */\n\nfunction install(Vue, options) {\n  if (Vue.__vuemeta_installed) {\n    return;\n  }\n\n  Vue.__vuemeta_installed = true;\n  options = setOptions(options);\n\n  Vue.prototype.$meta = function () {\n    return $meta.call(this, options);\n  };\n\n  Vue.mixin(createMixin(Vue, options));\n}\n\nvar index = {\n  version: version,\n  install: install,\n  generate: function generate$1(metaInfo, options) {\n    return  generate(metaInfo, options) ;\n  },\n  hasMetaInfo: hasMetaInfo\n};\n\nexport default index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}